{"ast":null,"code":"import axios from 'axios';\nimport { setRepos } from '../store/reposReducer'; // const URL = 'https://api.openweathermap.org/data/2.5/weather';\n// const API_KEY = 'd6487c851d4294ca86263fcb2861f71f';\n// export const getRepos = async (searchQuery = 'London') => {\n//   return async(dispatch) => {\n//     const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${searchQuery}&units=metric&appid=${API_KEY}`)\n//     dispatch(setRepos(response.data))\n//   }\n// };\n// import axios from 'axios'\n// import {setRepos} from \"../../reducers/reposReducer\";\n\nexport const getRepos = (searchQuery = \"stars:%3E1\") => {\n  return async dispatch => {\n    const response = await axios.get(`https://api.github.com/search/repositories?q=${searchQuery}&sort=stars`);\n    dispatch(setRepos(response.data));\n  };\n};","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/weather/weater-app/src/store/action/repos.js"],"names":["axios","setRepos","getRepos","searchQuery","dispatch","response","get","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,uBAAzB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,WAAW,GAAG,YAAf,KAAgC;AACpD,SAAO,MAAOC,QAAP,IAAoB;AACvB,UAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAW,gDAA+CH,WAAY,aAAtE,CAAvB;AACAC,IAAAA,QAAQ,CAACH,QAAQ,CAACI,QAAQ,CAACE,IAAV,CAAT,CAAR;AACH,GAHD;AAIH,CALM","sourcesContent":["import axios from 'axios';\nimport { setRepos } from '../store/reposReducer';\n\n// const URL = 'https://api.openweathermap.org/data/2.5/weather';\n// const API_KEY = 'd6487c851d4294ca86263fcb2861f71f';\n\n// export const getRepos = async (searchQuery = 'London') => {\n//   return async(dispatch) => {\n//     const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${searchQuery}&units=metric&appid=${API_KEY}`)\n//     dispatch(setRepos(response.data))\n//   }\n// };\n\n\n// import axios from 'axios'\n// import {setRepos} from \"../../reducers/reposReducer\";\n\nexport const getRepos = (searchQuery = \"stars:%3E1\") => {\n    return async (dispatch) => {\n        const response = await axios.get(`https://api.github.com/search/repositories?q=${searchQuery}&sort=stars`)\n        dispatch(setRepos(response.data))\n    }\n}"]},"metadata":{},"sourceType":"module"}