{"ast":null,"code":"// import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n// import axios from 'axios';\n// const API_KEY = 'd6487c851d4294ca86263fcb2861f71f';\n// export const fetchWeatherAction = createAsyncThunk(\n//   'weather/fetch',\n//   async (payload, { rejectWithValue, getState, dispatch }) => {\n//     try {\n//       const { data } = axios.get(\n//         `https://api.openweathermap.org/data/2.5/weather?q=${payload}&appid=d6487c851d4294ca86263fcb2861f71f`\n//       );\n//       return data;\n//     } catch (error) {\n//       if(!error?.response) {\n//         throw error\n//       }\n//       return rejectWithValue(error?.response?.data)\n//     }\n//   }\n// );\n// //slice\n// const weatherSlice = createSlice({\n//   name: 'weather',\n//   initialState: {data: 'Loaded'},\n//   extraReducers: builder => {\n//     //pending\n//     builder.addCase(fetchWeatherAction.pending, (state, action) => {\n//       state.loading = true;\n//     });\n//     //fulfiled\n//     builder.addCase(fetchWeatherAction.fulfiled, (state, action) => {\n//       state.weather = action?.payload;\n//       state.loading = false;\n//       state.error = undefined;\n//     });\n//     //rejected\n//     builder.addCase(fetchWeatherAction.rejected, (state, action) => {\n//       state.loading = false;\n//       state.weather = undefined;\n//       state.error = action?.payload;\n//     });\n//   },\n// });\n// export default weatherSlice.reducer;\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\"; //action\n\nexport const fetchWeatherAction = createAsyncThunk(\"weather/fetch\", async (payload, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  try {\n    const {\n      data\n    } = await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${payload}&appid=d6487c851d4294ca86263fcb2861f71f`);\n    return data;\n  } catch (error) {\n    var _error$response;\n\n    if (!(error === null || error === void 0 ? void 0 : error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n}); //slice\n\nconst weatherSlice = createSlice({\n  name: \"weather\",\n  initialState: {\n    data: 'Loader'\n  },\n  extraReducers: builder => {\n    //pending\n    builder.addCase(fetchWeatherAction.pending, (state, action) => {\n      state.loading = true;\n    }); //fulfilled\n\n    builder.addCase(fetchWeatherAction.fulfilled, (state, action) => {\n      state.weather = action === null || action === void 0 ? void 0 : action.payload;\n      state.loading = false;\n      state.error = undefined;\n    }); //rejected\n\n    builder.addCase(fetchWeatherAction.rejected, (state, action) => {\n      state.loading = false;\n      state.weather = undefined;\n      state.error = action === null || action === void 0 ? void 0 : action.payload;\n    });\n  }\n});\nexport default weatherSlice.reducer;","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/weather/weater-app/src/redux/slices/weatherSlices.js"],"names":["createAsyncThunk","createSlice","axios","fetchWeatherAction","payload","rejectWithValue","getState","dispatch","data","get","error","response","weatherSlice","name","initialState","extraReducers","builder","addCase","pending","state","action","loading","fulfilled","weather","undefined","rejected","reducer"],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,kBAAkB,GAAGH,gBAAgB,CAChD,eADgD,EAEhD,OAAOI,OAAP,EAAgB;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA;AAA7B,CAAhB,KAA4D;AAC1D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMN,KAAK,CAACO,GAAN,CACpB,oDAAmDL,OAAQ,yCADvC,CAAvB;AAGA,WAAOI,IAAP;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AAAA;;AACd,QAAI,EAACA,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEC,QAAR,CAAJ,EAAsB;AACpB,YAAMD,KAAN;AACD;;AACD,WAAOL,eAAe,CAACK,KAAD,aAACA,KAAD,0CAACA,KAAK,CAAEC,QAAR,oDAAC,gBAAiBH,IAAlB,CAAtB;AACD;AACF,CAd+C,CAA3C,C,CAiBP;;AAEA,MAAMI,YAAY,GAAGX,WAAW,CAAC;AAC/BY,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAE;AAACN,IAAAA,IAAI,EAAE;AAAP,GAFiB;AAG/BO,EAAAA,aAAa,EAAEC,OAAO,IAAI;AACxB;AACAA,IAAAA,OAAO,CAACC,OAAR,CAAgBd,kBAAkB,CAACe,OAAnC,EAA4C,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7DD,MAAAA,KAAK,CAACE,OAAN,GAAgB,IAAhB;AACD,KAFD,EAFwB,CAKxB;;AACAL,IAAAA,OAAO,CAACC,OAAR,CAAgBd,kBAAkB,CAACmB,SAAnC,EAA8C,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC/DD,MAAAA,KAAK,CAACI,OAAN,GAAgBH,MAAhB,aAAgBA,MAAhB,uBAAgBA,MAAM,CAAEhB,OAAxB;AACAe,MAAAA,KAAK,CAACE,OAAN,GAAgB,KAAhB;AACAF,MAAAA,KAAK,CAACT,KAAN,GAAcc,SAAd;AACD,KAJD,EANwB,CAWxB;;AACAR,IAAAA,OAAO,CAACC,OAAR,CAAgBd,kBAAkB,CAACsB,QAAnC,EAA6C,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC9DD,MAAAA,KAAK,CAACE,OAAN,GAAgB,KAAhB;AACAF,MAAAA,KAAK,CAACI,OAAN,GAAgBC,SAAhB;AACAL,MAAAA,KAAK,CAACT,KAAN,GAAcU,MAAd,aAAcA,MAAd,uBAAcA,MAAM,CAAEhB,OAAtB;AACD,KAJD;AAKD;AApB8B,CAAD,CAAhC;AAuBA,eAAeQ,YAAY,CAACc,OAA5B","sourcesContent":["// import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n// import axios from 'axios';\n\n// const API_KEY = 'd6487c851d4294ca86263fcb2861f71f';\n\n// export const fetchWeatherAction = createAsyncThunk(\n//   'weather/fetch',\n//   async (payload, { rejectWithValue, getState, dispatch }) => {\n//     try {\n//       const { data } = axios.get(\n//         `https://api.openweathermap.org/data/2.5/weather?q=${payload}&appid=d6487c851d4294ca86263fcb2861f71f`\n//       );\n\n//       return data;\n//     } catch (error) {\n//       if(!error?.response) {\n//         throw error\n//       }\n//       return rejectWithValue(error?.response?.data)\n//     }\n//   }\n// );\n\n// //slice\n\n// const weatherSlice = createSlice({\n//   name: 'weather',\n//   initialState: {data: 'Loaded'},\n//   extraReducers: builder => {\n//     //pending\n//     builder.addCase(fetchWeatherAction.pending, (state, action) => {\n//       state.loading = true;\n//     });\n//     //fulfiled\n//     builder.addCase(fetchWeatherAction.fulfiled, (state, action) => {\n//       state.weather = action?.payload;\n//       state.loading = false;\n//       state.error = undefined;\n//     });\n//     //rejected\n//     builder.addCase(fetchWeatherAction.rejected, (state, action) => {\n//       state.loading = false;\n//       state.weather = undefined;\n//       state.error = action?.payload;\n//     });\n//   },\n// });\n\n// export default weatherSlice.reducer;\n\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n//action\nexport const fetchWeatherAction = createAsyncThunk(\n  \"weather/fetch\",\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    try {\n      const { data } = await axios.get(\n        `http://api.openweathermap.org/data/2.5/weather?q=${payload}&appid=d6487c851d4294ca86263fcb2861f71f`\n      );\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n//slice\n\nconst weatherSlice = createSlice({\n  name: \"weather\",\n  initialState: {data: 'Loader'},\n  extraReducers: builder => {\n    //pending\n    builder.addCase(fetchWeatherAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    //fulfilled\n    builder.addCase(fetchWeatherAction.fulfilled, (state, action) => {\n      state.weather = action?.payload;\n      state.loading = false;\n      state.error = undefined;\n    });\n    //rejected\n    builder.addCase(fetchWeatherAction.rejected, (state, action) => {\n      state.loading = false;\n      state.weather = undefined;\n      state.error = action?.payload;\n    });\n  },\n});\n\nexport default weatherSlice.reducer;"]},"metadata":{},"sourceType":"module"}