{"ast":null,"code":"import React, { useState } from 'react';\nconst LanguageContext = /*#__PURE__*/React.createContext();\nexport const LanguageConsumer = LanguageContext.Consumer; // class LanguageProvider extends React.Component {\n//   state = {\n//     language: \"french\"\n//   };\n//   updateLanguage = e => this.setState({ language: e.target.value });\n//   render() {\n//     return (\n//       <LanguageContext.Provider\n//         value={{\n//           language: this.state.language,\n//           updateLanguage: this.updateLanguage\n//         }}\n//       >\n//         {this.props.children}\n//       </LanguageContext.Provider>\n//     );\n//   }\n// }\n// const LanguageProvider = (props) => {\n//   console.log(props);\n//   const [language, setLanguege] = useState('english')\n//   const updateLanguege = (e) => setLanguege({language: e.target.value})\n//   return (\n//     <div>\n//       <LanguageContext.Provider\n//         value={{\n//           language: {language},\n//           updateLanguege: {updateLanguege}\n//         }}\n//       >\n//         {props.children}\n//       </LanguageContext.Provider>\n//     </div>\n//   );\n// };\n\nexport default LanguageProvider;","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/WeatherApp/Weater-app/src/modules/languageFolder/LanguageProvider.jsx"],"names":["React","useState","LanguageContext","createContext","LanguageConsumer","Consumer","LanguageProvider"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,MAAMC,eAAe,gBAAGF,KAAK,CAACG,aAAN,EAAxB;AACA,OAAO,MAAMC,gBAAgB,GAAGF,eAAe,CAACG,QAAzC,C,CAGP;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,gBAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst LanguageContext = React.createContext()\nexport const LanguageConsumer = LanguageContext.Consumer;\n\n\n// class LanguageProvider extends React.Component {\n//   state = {\n//     language: \"french\"\n//   };\n  \n//   updateLanguage = e => this.setState({ language: e.target.value });\n\n//   render() {\n//     return (\n//       <LanguageContext.Provider\n//         value={{\n//           language: this.state.language,\n//           updateLanguage: this.updateLanguage\n//         }}\n//       >\n//         {this.props.children}\n//       </LanguageContext.Provider>\n//     );\n//   }\n// }\n// const LanguageProvider = (props) => {\n//   console.log(props);\n//   const [language, setLanguege] = useState('english')\n  \n//   const updateLanguege = (e) => setLanguege({language: e.target.value})\n\n//   return (\n//     <div>\n//       <LanguageContext.Provider\n//         value={{\n//           language: {language},\n//           updateLanguege: {updateLanguege}\n//         }}\n//       >\n//         {props.children}\n//       </LanguageContext.Provider>\n//     </div>\n//   );\n// };\n\nexport default LanguageProvider;"]},"metadata":{},"sourceType":"module"}