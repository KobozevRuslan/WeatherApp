{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_KEY = 'd6487c851d4294ca86263fcb2861f71f';\nconst URL = 'https://api.openweathermap.org/data/2.5/weather'; //action\n\nexport const fetchWeatherAction = createAsyncThunk(\"weather/fetch\", async (payload, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  // try {\n  // const { data } = await axios.get(\n  //   `http://api.openweathermap.org/data/2.5/weather?q=${payload}&appid=${API_KEY}`\n  // );\n  const {\n    data\n  } = await axios.get(URL, {\n    params: {\n      q: payload,\n      units: 'metric',\n      APPID: API_KEY\n    }\n  });\n  return data; // } catch (error) {\n  //   if (!error?.response) {\n  //     throw error;\n  //   }\n  //   return rejectWithValue(error?.response?.data);\n  // }\n}); //slice\n\nconst weatherSlice = createSlice({\n  name: \"weather\",\n  initialState: {},\n  extraReducers: builder => {\n    //pending\n    builder.addCase(fetchWeatherAction.pending, (state, action) => {\n      state.loading = true;\n    }); //fulfilled\n\n    builder.addCase(fetchWeatherAction.fulfilled, (state, action) => {\n      state.weather = action === null || action === void 0 ? void 0 : action.payload;\n      state.loading = false;\n      state.error = undefined;\n    }); //rejected\n\n    builder.addCase(fetchWeatherAction.rejected, (state, action) => {\n      state.loading = false;\n      state.weather = undefined;\n      state.error = action === null || action === void 0 ? void 0 : action.payload;\n    });\n  }\n});\nexport default weatherSlice.reducer;","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/weather/weater-app/src/redux/slices/weatherSlices.js"],"names":["createAsyncThunk","createSlice","axios","API_KEY","URL","fetchWeatherAction","payload","rejectWithValue","getState","dispatch","data","get","params","q","units","APPID","weatherSlice","name","initialState","extraReducers","builder","addCase","pending","state","action","loading","fulfilled","weather","error","undefined","rejected","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;AACA,MAAMC,GAAG,GAAG,iDAAZ,C,CAEA;;AACA,OAAO,MAAMC,kBAAkB,GAAGL,gBAAgB,CAChD,eADgD,EAEhD,OAAOM,OAAP,EAAgB;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA;AAA7B,CAAhB,KAA4D;AAC1D;AACE;AACA;AACA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMR,KAAK,CAACS,GAAN,CAAUP,GAAV,EAAe;AACpCQ,IAAAA,MAAM,EAAE;AACNC,MAAAA,CAAC,EAAEP,OADG;AAENQ,MAAAA,KAAK,EAAE,QAFD;AAGNC,MAAAA,KAAK,EAAEZ;AAHD;AAD4B,GAAf,CAAvB;AAOA,SAAOO,IAAP,CAZwD,CAa1D;AACA;AACA;AACA;AACA;AACA;AACD,CArB+C,CAA3C,C,CAwBP;;AAEA,MAAMM,YAAY,GAAGf,WAAW,CAAC;AAC/BgB,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAE,EAFiB;AAG/BC,EAAAA,aAAa,EAAEC,OAAO,IAAI;AACxB;AACAA,IAAAA,OAAO,CAACC,OAAR,CAAgBhB,kBAAkB,CAACiB,OAAnC,EAA4C,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7DD,MAAAA,KAAK,CAACE,OAAN,GAAgB,IAAhB;AACD,KAFD,EAFwB,CAKxB;;AACAL,IAAAA,OAAO,CAACC,OAAR,CAAgBhB,kBAAkB,CAACqB,SAAnC,EAA8C,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC/DD,MAAAA,KAAK,CAACI,OAAN,GAAgBH,MAAhB,aAAgBA,MAAhB,uBAAgBA,MAAM,CAAElB,OAAxB;AACAiB,MAAAA,KAAK,CAACE,OAAN,GAAgB,KAAhB;AACAF,MAAAA,KAAK,CAACK,KAAN,GAAcC,SAAd;AACD,KAJD,EANwB,CAWxB;;AACAT,IAAAA,OAAO,CAACC,OAAR,CAAgBhB,kBAAkB,CAACyB,QAAnC,EAA6C,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAC9DD,MAAAA,KAAK,CAACE,OAAN,GAAgB,KAAhB;AACAF,MAAAA,KAAK,CAACI,OAAN,GAAgBE,SAAhB;AACAN,MAAAA,KAAK,CAACK,KAAN,GAAcJ,MAAd,aAAcA,MAAd,uBAAcA,MAAM,CAAElB,OAAtB;AACD,KAJD;AAKD;AApB8B,CAAD,CAAhC;AAuBA,eAAeU,YAAY,CAACe,OAA5B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst API_KEY = 'd6487c851d4294ca86263fcb2861f71f';\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\n\n//action\nexport const fetchWeatherAction = createAsyncThunk(\n  \"weather/fetch\",\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    // try {\n      // const { data } = await axios.get(\n      //   `http://api.openweathermap.org/data/2.5/weather?q=${payload}&appid=${API_KEY}`\n      // );\n      const { data } = await axios.get(URL, {\n        params: {\n          q: payload,\n          units: 'metric',\n          APPID: API_KEY,\n        },\n      });\n      return data;\n    // } catch (error) {\n    //   if (!error?.response) {\n    //     throw error;\n    //   }\n    //   return rejectWithValue(error?.response?.data);\n    // }\n  }\n);\n\n//slice\n\nconst weatherSlice = createSlice({\n  name: \"weather\",\n  initialState: {},\n  extraReducers: builder => {\n    //pending\n    builder.addCase(fetchWeatherAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    //fulfilled\n    builder.addCase(fetchWeatherAction.fulfilled, (state, action) => {\n      state.weather = action?.payload;\n      state.loading = false;\n      state.error = undefined;\n    });\n    //rejected\n    builder.addCase(fetchWeatherAction.rejected, (state, action) => {\n      state.loading = false;\n      state.weather = undefined;\n      state.error = action?.payload;\n    });\n  },\n});\n\nexport default weatherSlice.reducer;"]},"metadata":{},"sourceType":"module"}