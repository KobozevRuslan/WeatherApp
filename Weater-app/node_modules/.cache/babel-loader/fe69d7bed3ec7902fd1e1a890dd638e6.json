{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/weather/weater-app/src/modules/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SearchInput from './components/searchInput/SearchInput';\nimport WeatherItems from './components/weatherList/WeatherItems';\nimport { fetchWeather } from '../service/ApiService';\nimport { MainWrapper } from './styledComponents/App';\nimport GlobalStyle from '../styledComponents/GlobalStyle';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const repos = useSelector(state => state.repos.items);\n  useEffect(() => {\n    dispatch(getRepos());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: repos.map(repo => /*#__PURE__*/_jsxDEV(Repo, {\n      repo: repo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this); // const [query, setQuery] = useState('');\n  // const [weather, setWeather] = useState({});\n  // const search = async (e) => {\n  //   if (e.key === 'Enter') {\n  //     const data = await fetchWeather(query);\n  //     setWeather(data);\n  //     setQuery('');\n  //   }\n  // };\n  // return (\n  //   <MainWrapper>\n  //     <SearchInput query={query} setQuery={setQuery} search={search} />\n  //     <WeatherItems weather={weather} />\n  //     <GlobalStyle />\n  //   </MainWrapper>\n  // );\n};\n\n_s(App, \"XbDkWTX81kYI1vH/avZNSDxV/qU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/weather/weater-app/src/modules/App.jsx"],"names":["React","useState","SearchInput","WeatherItems","fetchWeather","MainWrapper","GlobalStyle","useDispatch","useSelector","App","dispatch","repos","state","items","useEffect","getRepos","map","repo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,SAASC,YAAT,QAA6B,uBAA7B;AAEA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACE,QAAMI,KAAK,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYE,KAAtB,CAAzB;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVJ,IAAAA,QAAQ,CAACK,QAAQ,EAAT,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,cACKJ,KAAK,CAACK,GAAN,CAAUC,IAAI,iBACX,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ,CARc,CAehB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAjCD;;GAAMR,G;UACaF,W,EACDC,W;;;KAFZC,G;AAmCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport SearchInput from './components/searchInput/SearchInput';\nimport WeatherItems from './components/weatherList/WeatherItems';\n\nimport { fetchWeather } from '../service/ApiService';\n\nimport { MainWrapper } from './styledComponents/App';\nimport GlobalStyle from '../styledComponents/GlobalStyle';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nconst App = () => {\n  const dispatch = useDispatch()\n    const repos = useSelector(state => state.repos.items)\n\n    useEffect(()=>{\n        dispatch(getRepos())\n    }, [])\n\n    return (\n        <div>\n            {repos.map(repo =>\n                <Repo repo={repo}/>\n            )}\n        </div>\n    );\n  // const [query, setQuery] = useState('');\n  // const [weather, setWeather] = useState({});\n\n  // const search = async (e) => {\n  //   if (e.key === 'Enter') {\n  //     const data = await fetchWeather(query);\n  //     setWeather(data);\n  //     setQuery('');\n  //   }\n  // };\n\n  // return (\n  //   <MainWrapper>\n  //     <SearchInput query={query} setQuery={setQuery} search={search} />\n  //     <WeatherItems weather={weather} />\n  //     <GlobalStyle />\n  //   </MainWrapper>\n  // );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}