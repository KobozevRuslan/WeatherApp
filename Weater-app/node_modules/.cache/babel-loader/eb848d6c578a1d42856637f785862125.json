{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/WeatherApp/Weater-app/src/modules/languageFolder/Index.jsx\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/React.createContext();\nconst LanguageConsumer = LanguageContext.Consumer;\nexport default class LanguageProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      language: \"french\"\n    };\n\n    this.updateLanguage = e => this.setState({\n      language: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n      value: {\n        language: this.state.language,\n        updateLanguage: this.updateLanguage\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const LanguageProvider = (props) => {\n//   const [language, setLanguage] = useState('french')\n//   const updateLangug = (e) => {\n//     return setLanguage(e.target.value)\n//   }\n//   console.log('props', props);\n//   return(\n//     <LanguageContext.Provider\n//       value={{\n//         language: language,\n//         updateLangug: updateLangug,\n//       }}\n//     >\n//       {props.children}\n//     </LanguageContext.Provider>\n//   )\n// }\n// export default LanguageProvider;\n\nexport const HeaderTest = () => {\n  return /*#__PURE__*/_jsxDEV(LanguageConsumer, {\n    children: ({\n      updateLanguage\n    }) => /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [\"see this site in\", /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: updateLanguage,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"french\",\n          children: \"french\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"english\",\n          children: \"english\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"italian\",\n          children: \"italian\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c = HeaderTest;\nexport const TranslatableText = props => /*#__PURE__*/_jsxDEV(LanguageConsumer, {\n  children: ({\n    language\n  }) => props.dictionary[language]\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 68,\n  columnNumber: 3\n}, this);\n_c2 = TranslatableText;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HeaderTest\");\n$RefreshReg$(_c2, \"TranslatableText\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/WeatherApp/Weater-app/src/modules/languageFolder/Index.jsx"],"names":["React","useState","LanguageContext","createContext","LanguageConsumer","Consumer","LanguageProvider","Component","state","language","updateLanguage","e","setState","target","value","render","props","children","HeaderTest","TranslatableText","dictionary"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,eAAe,gBAAGF,KAAK,CAACG,aAAN,EAAxB;AACA,MAAMC,gBAAgB,GAAGF,eAAe,CAACG,QAAzC;AAEA,eAAe,MAAMC,gBAAN,SAA+BN,KAAK,CAACO,SAArC,CAA+C;AAAA;AAAA;AAAA,SAC5DC,KAD4D,GACpD;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADoD;;AAAA,SAK5DC,cAL4D,GAK3CC,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAEH,MAAAA,QAAQ,EAAEE,CAAC,CAACE,MAAF,CAASC;AAArB,KAAd,CALsC;AAAA;;AAO5DC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,eAAD,CAAiB,QAAjB;AACE,MAAA,KAAK,EAAE;AACLN,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QADhB;AAELC,QAAAA,cAAc,EAAE,KAAKA;AAFhB,OADT;AAAA,gBAMG,KAAKM,KAAL,CAAWC;AANd;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAlB2D,C,CAqB9D;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,sBACE,QAAC,gBAAD;AAAA,cACG,CAAC;AAACR,MAAAA;AAAD,KAAD,kBAEC;AAAA,kDAEE;AAAQ,QAAA,QAAQ,EAAEA,cAAlB;AAAA,gCACE;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAhBM;KAAMQ,U;AAmBb,OAAO,MAAMC,gBAAgB,GAAGH,KAAK,iBACnC,QAAC,gBAAD;AAAA,YACG,CAAC;AAAEP,IAAAA;AAAF,GAAD,KAAkBO,KAAK,CAACI,UAAN,CAAiBX,QAAjB;AADrB;AAAA;AAAA;AAAA;AAAA,QADK;MAAMU,gB","sourcesContent":["import React, { useState } from \"react\";\n\nconst LanguageContext = React.createContext();\nconst LanguageConsumer = LanguageContext.Consumer;\n\nexport default class LanguageProvider extends React.Component {\n  state = {\n    language: \"french\"\n  };\n\n  updateLanguage = e => this.setState({ language: e.target.value });\n\n  render() {\n    return (\n      <LanguageContext.Provider\n        value={{\n          language: this.state.language,\n          updateLanguage: this.updateLanguage\n        }}\n      >\n        {this.props.children}\n      </LanguageContext.Provider>\n    );\n  }\n}\n\n// const LanguageProvider = (props) => {\n//   const [language, setLanguage] = useState('french')\n\n//   const updateLangug = (e) => {\n//     return setLanguage(e.target.value)\n//   }\n//   console.log('props', props);\n//   return(\n//     <LanguageContext.Provider\n//       value={{\n//         language: language,\n//         updateLangug: updateLangug,\n//       }}\n//     >\n//       {props.children}\n//     </LanguageContext.Provider>\n//   )\n// }\n\n// export default LanguageProvider;\n\nexport const HeaderTest = () => {\n  return (\n    <LanguageConsumer>\n      {({updateLanguage}) =>\n        (\n        <header>\n          see this site in\n          <select onChange={updateLanguage}>\n            <option value=\"french\">french</option>\n            <option value=\"english\">english</option>\n            <option value=\"italian\">italian</option>\n          </select>\n        </header>\n      )}\n    </LanguageConsumer>\n  );\n};\n\n\nexport const TranslatableText = props => (\n  <LanguageConsumer>\n    {({ language }) => props.dictionary[language]}\n  </LanguageConsumer>\n);\n"]},"metadata":{},"sourceType":"module"}