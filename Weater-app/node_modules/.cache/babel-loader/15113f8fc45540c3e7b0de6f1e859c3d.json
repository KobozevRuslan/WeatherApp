{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/WeatherApp/WeatherApp/Weater-app/src/components/testComponents/Test.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Box, ChakraProvider } from \"@chakra-ui/react\";\nimport { Autocomplete } from \"chakra-ui-simple-autocomplete\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Test() {\n  _s();\n\n  const [result, setResult] = useState([]);\n  const options = [{\n    value: \"javascript\",\n    label: \"Javascript\"\n  }, {\n    value: \"chakra\",\n    label: \"Chakra\"\n  }, {\n    value: \"react\",\n    label: \"React\"\n  }, {\n    value: \"css\",\n    label: \"CSS\"\n  }];\n  const state = useSelector(state => state.app);\n  const {\n    weather\n  } = state;\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        maxW: \"md\",\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: options,\n          result: result,\n          setResult: options => {\n            setResult(options);\n          },\n          placeholder: \"Autocomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Test, \"Fyu28PnfeDKvku5mTfSK2y7ks2g=\", false, function () {\n  return [useSelector];\n});\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/WeatherApp/WeatherApp/Weater-app/src/components/testComponents/Test.tsx"],"names":["useState","Box","ChakraProvider","Autocomplete","useSelector","Test","result","setResult","options","value","label","state","app","weather"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,EAAcC,cAAd,QAAoC,kBAApC;AACA,SAASC,YAAT,QAAqC,+BAArC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAIA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAW,EAAX,CAApC;AAEA,QAAMQ,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GADc,EAEd;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAFc,EAGd;AAAED,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAHc,EAId;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAJc,CAAhB;AAOA,QAAMC,KAAK,GAAGP,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,GAAlB,CAAzB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAYF,KAAlB;AAEA,sBACE,QAAC,cAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAC,IAAV;AAAA,+BACE,QAAC,YAAD;AACE,UAAA,OAAO,EAAEH,OADX;AAEE,UAAA,MAAM,EAAEF,MAFV;AAGE,UAAA,SAAS,EAAGE,OAAD,IAAuB;AAChCD,YAAAA,SAAS,CAACC,OAAD,CAAT;AACD,WALH;AAME,UAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA7BuBH,I;UAURD,W;;;KAVQC,I","sourcesContent":["import { useState } from \"react\";\nimport { Box, ChakraProvider } from \"@chakra-ui/react\";\nimport { Autocomplete, Option } from \"chakra-ui-simple-autocomplete\";\nimport { useSelector } from \"react-redux\";\n\n\n\nexport default function Test() {\n  const [result, setResult] = useState<Option[]>([]);\n\n  const options = [\n    { value: \"javascript\", label: \"Javascript\" },\n    { value: \"chakra\", label: \"Chakra\" },\n    { value: \"react\", label: \"React\" },\n    { value: \"css\", label: \"CSS\" }\n  ];\n  \n  const state = useSelector((state) => state.app);\n  const {weather} = state\n\n  return (\n    <ChakraProvider>\n      <div className=\"App\">\n        <Box maxW=\"md\">\n          <Autocomplete\n            options={options}\n            result={result}\n            setResult={(options: Option[]) => {\n              setResult(options);\n            }}\n            placeholder=\"Autocomplete\"\n          />\n        </Box>\n      </div>\n    </ChakraProvider>\n  );\n}"]},"metadata":{},"sourceType":"module"}