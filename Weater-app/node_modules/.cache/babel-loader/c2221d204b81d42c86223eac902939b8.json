{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/WeatherApp/Weater-app/src/modules/languageFolder/LanguageProvider.jsx\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/React.createContext();\nexport const LanguageConsumer = LanguageContext.Consumer;\n\nclass LanguageProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      language: \"french\"\n    };\n\n    this.updateLanguageHandler = e => this.setState({\n      language: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n      value: {\n        language: this.state.language,\n        updateLanguage: this.updateLanguageHandler\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const LanguageProvider = (props) => {\n//   console.log(props);\n//   const [language, setLanguege] = useState('english')\n//   const updateLanguege = (e) => setLanguege({language: e.target.value})\n//   return (\n//     <div>\n//       <LanguageContext.Provider\n//         value={{\n//           language: {language},\n//           updateLanguege: {updateLanguege}\n//         }}\n//       >\n//         {props.children}\n//       </LanguageContext.Provider>\n//     </div>\n//   );\n// };\n\n\nexport default LanguageProvider;","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/WeatherApp/Weater-app/src/modules/languageFolder/LanguageProvider.jsx"],"names":["React","useState","LanguageContext","createContext","LanguageConsumer","Consumer","LanguageProvider","Component","state","language","updateLanguageHandler","e","setState","target","value","render","updateLanguage","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,eAAe,gBAAGF,KAAK,CAACG,aAAN,EAAxB;AACA,OAAO,MAAMC,gBAAgB,GAAGF,eAAe,CAACG,QAAzC;;AAGP,MAAMC,gBAAN,SAA+BN,KAAK,CAACO,SAArC,CAA+C;AAAA;AAAA;AAAA,SAC7CC,KAD6C,GACrC;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADqC;;AAAA,SAK7CC,qBAL6C,GAKrBC,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAEH,MAAAA,QAAQ,EAAEE,CAAC,CAACE,MAAF,CAASC;AAArB,KAAd,CALgB;AAAA;;AAO7CC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,eAAD,CAAiB,QAAjB;AACE,MAAA,KAAK,EAAE;AACLN,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QADhB;AAELO,QAAAA,cAAc,EAAE,KAAKN;AAFhB,OADT;AAAA,gBAMG,KAAKO,KAAL,CAAWC;AANd;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAlB4C,C,CAoB/C;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeZ,gBAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst LanguageContext = React.createContext()\nexport const LanguageConsumer = LanguageContext.Consumer;\n\n\nclass LanguageProvider extends React.Component {\n  state = {\n    language: \"french\"\n  };\n  \n  updateLanguageHandler = e => this.setState({ language: e.target.value });\n\n  render() {\n    return (\n      <LanguageContext.Provider\n        value={{\n          language: this.state.language,\n          updateLanguage: this.updateLanguageHandler\n        }}\n      >\n        {this.props.children}\n      </LanguageContext.Provider>\n    );\n  }\n}\n// const LanguageProvider = (props) => {\n//   console.log(props);\n//   const [language, setLanguege] = useState('english')\n  \n//   const updateLanguege = (e) => setLanguege({language: e.target.value})\n\n//   return (\n//     <div>\n//       <LanguageContext.Provider\n//         value={{\n//           language: {language},\n//           updateLanguege: {updateLanguege}\n//         }}\n//       >\n//         {props.children}\n//       </LanguageContext.Provider>\n//     </div>\n//   );\n// };\n\nexport default LanguageProvider;"]},"metadata":{},"sourceType":"module"}