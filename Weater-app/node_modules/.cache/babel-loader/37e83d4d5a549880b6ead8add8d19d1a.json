{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/WeatherApp/WeatherApp/Weater-app/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchData } from '../store/thunk/action/app';\nimport Header from './header/Header';\nimport Main from './main/Main';\nimport { AppWrapper, MainAppWrapper } from './styledComponents/App';\nimport GlobalStyle from '../styledComponents/GlobalStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [theme, setTheme] = useState(false);\n\n  const changeTheme = () => {\n    setTheme(!theme);\n  };\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchData('London'));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(AppWrapper, {\n    test: theme,\n    children: /*#__PURE__*/_jsxDEV(MainAppWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeTheme,\n        children: \"click\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => d,\n        children: \"thunk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        styleTest: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"cMmEqwvhcVfO6A3PaL0DUS1Cow4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/WeatherApp/WeatherApp/Weater-app/src/components/App.jsx"],"names":["React","useEffect","useState","useDispatch","fetchData","Header","Main","AppWrapper","MainAppWrapper","GlobalStyle","App","theme","setTheme","changeTheme","dispatch","d"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,SAAT,QAA0B,2BAA1B;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,wBAA3C;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;;AACA,QAAMW,WAAW,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD,GAFD;;AAGA,QAAMG,QAAQ,GAAGX,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACV,SAAS,CAAC,QAAD,CAAV,CAAR;AACD,GAFQ,EAEN,CAACU,QAAD,CAFM,CAAT;AAIA,sBACE,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEH,KAAlB;AAAA,2BACE,QAAC,cAAD;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAME,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEJ;AAAjB;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAvBD;;GAAMD,G;UAKaP,W;;;KALbO,G;AAyBN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchData } from '../store/thunk/action/app';\n\nimport Header from './header/Header';\nimport Main from './main/Main';\n\nimport { AppWrapper, MainAppWrapper } from './styledComponents/App';\nimport GlobalStyle from '../styledComponents/GlobalStyle';\n\nconst App = () => {\n  const [theme, setTheme] = useState(false)\n  const changeTheme = () => {\n    setTheme(!theme)\n  }\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchData('London'));\n  }, [dispatch]);\n\n  return (\n    <AppWrapper test={theme}>\n      <MainAppWrapper>\n        <button onClick={changeTheme}>click</button>\n        <button onClick={() => d}>thunk</button>\n        <Header />\n        <Main styleTest={theme} />\n        <GlobalStyle />\n      </MainAppWrapper>\n\n    </AppWrapper>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}