{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/weather/weater-app/src/modules/components/weatherList/WeatherItems.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchWeatherAction } from '../../../redux/slices/weatherSlices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeatherItems = () => {\n  _s();\n\n  const [city, setCity] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchWeatherAction('london'));\n  }, []); // select state from store\n\n  const state = useSelector(state => state);\n  const {\n    weather,\n    loading,\n    error\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [weather === null || weather === void 0 ? void 0 : weather.name, \", \", weather === null || weather === void 0 ? void 0 : weather.sys.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Math.round(weather === null || weather === void 0 ? void 0 : weather.main.temp), /*#__PURE__*/_jsxDEV(\"sup\", {\n        children: \"\\xB0C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://openweathermap.org/img/wn/${weather === null || weather === void 0 ? void 0 : weather.weather[0].icon}@2x.png`,\n        alt: weather === null || weather === void 0 ? void 0 : weather.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather === null || weather === void 0 ? void 0 : weather.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(WeatherItems, \"werB3FfQqjalRTZ5RCsXFAp2f10=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = WeatherItems;\nWeatherItems.propTypes = {\n  weather: PropTypes.object.isRequired\n};\nexport default WeatherItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherItems\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/weather/weater-app/src/modules/components/weatherList/WeatherItems.jsx"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","fetchWeatherAction","WeatherItems","city","setCity","dispatch","state","weather","loading","error","name","sys","country","Math","round","main","temp","icon","description","propTypes","object","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,qCAAnC;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMQ,QAAQ,GAAGN,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACJ,kBAAkB,CAAC,QAAD,CAAnB,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT,CAJyB,CAQzB;;AACA,QAAMK,KAAK,GAAGN,WAAW,CAAEM,KAAD,IAAWA,KAAZ,CAAzB;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAA8BH,KAApC;AACA,sBACE;AAAA,4BACE;AAAA,6BACE;AAAA,mBACGC,OADH,aACGA,OADH,uBACGA,OAAO,CAAEG,IADZ,QACoBH,OADpB,aACoBA,OADpB,uBACoBA,OAAO,CAAEI,GAAT,CAAaC,OADjC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,iBACGC,IAAI,CAACC,KAAL,CAAWP,OAAX,aAAWA,OAAX,uBAAWA,OAAO,CAAEQ,IAAT,CAAcC,IAAzB,CADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAUE;AAAA,8BACE;AACE,QAAA,GAAG,EAAG,qCAAoCT,OAArC,aAAqCA,OAArC,uBAAqCA,OAAO,CAAEA,OAAT,CAAiB,CAAjB,EAAoBU,IAAK,SADrE;AAEE,QAAA,GAAG,EAAEV,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEA,OAAT,CAAiB,CAAjB,EAAoBW;AAF3B;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,kBAAIX,OAAJ,aAAIA,OAAJ,uBAAIA,OAAO,CAAEA,OAAT,CAAiB,CAAjB,EAAoBW;AAAxB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAoBD,CA/BD;;GAAMhB,Y;UAEaH,W,EAOHC,W;;;KATVE,Y;AAiCNA,YAAY,CAACiB,SAAb,GAAyB;AACvBZ,EAAAA,OAAO,EAAET,SAAS,CAACsB,MAAV,CAAiBC;AADH,CAAzB;AAIA,eAAenB,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchWeatherAction } from '../../../redux/slices/weatherSlices';\n\nconst WeatherItems = () => {\n  const [city, setCity] = useState('')\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchWeatherAction('london'));\n  }, []);\n\n  // select state from store\n  const state = useSelector((state) => state);\n  const { weather, loading, error } = state;\n  return (\n    <>\n      <h2>\n        <span>\n          {weather?.name}, {weather?.sys.country}\n        </span>\n      </h2>\n      <div>\n        {Math.round(weather?.main.temp)}\n        <sup>&deg;C</sup>\n      </div>\n      <div>\n        <img\n          src={`https://openweathermap.org/img/wn/${weather?.weather[0].icon}@2x.png`}\n          alt={weather?.weather[0].description}\n        />\n        <p>{weather?.weather[0].description}</p>\n      </div>\n    </>\n  );\n};\n\nWeatherItems.propTypes = {\n  weather: PropTypes.object.isRequired,\n};\n\nexport default WeatherItems;\n"]},"metadata":{},"sourceType":"module"}