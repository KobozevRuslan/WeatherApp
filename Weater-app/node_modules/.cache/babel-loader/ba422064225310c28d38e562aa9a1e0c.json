{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/WeatherApp/Weater-app/src/modules/components/languege/LanguageProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LanguageContext = /*#__PURE__*/React.createContext();\nexport const LanguageConsumer = LanguageContext.Consumer;\n\nconst LanguageProvider = props => {\n  _s();\n\n  const [language, setLanguage] = useState('english');\n\n  const updateLanguage = e => {\n    setLanguage({\n      language: e.taget.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      language,\n      updateLanguage\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LanguageProvider, \"WRp5++alBBiIDUNccpuR7iEKtiw=\");\n\n_c = LanguageProvider;\nexport default LanguageProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/WeatherApp/Weater-app/src/modules/components/languege/LanguageProvider.jsx"],"names":["React","useState","LanguageContext","createContext","LanguageConsumer","Consumer","LanguageProvider","props","language","setLanguage","updateLanguage","e","taget","value","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,MAAMC,eAAe,gBAAGF,KAAK,CAACG,aAAN,EAAxB;AACP,OAAO,MAAMC,gBAAgB,GAAGF,eAAe,CAACG,QAAzC;;AAEP,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,SAAD,CAAxC;;AAEA,QAAMS,cAAc,GAAIC,CAAD,IAAO;AAC5BF,IAAAA,WAAW,CAAC;AAACD,MAAAA,QAAQ,EAAEG,CAAC,CAACC,KAAF,CAAQC;AAAnB,KAAD,CAAX;AACD,GAFD;;AAIA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AACE,IAAA,KAAK,EAAE;AACLL,MAAAA,QADK;AAELE,MAAAA;AAFK,KADT;AAAA,cAMGH,KAAK,CAACO;AANT;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAjBD;;GAAMR,gB;;KAAAA,gB;AAmBN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from 'react';\n\nexport const LanguageContext = React.createContext();\nexport const LanguageConsumer = LanguageContext.Consumer;\n\nconst LanguageProvider = (props) => {\n  const [language, setLanguage] = useState('english')\n\n  const updateLanguage = (e) => {\n    setLanguage({language: e.taget.value})\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{\n        language,\n        updateLanguage,\n      }}\n    >\n      {props.children}\n    </LanguageContext.Provider>\n  );\n};\n\nexport default LanguageProvider;"]},"metadata":{},"sourceType":"module"}