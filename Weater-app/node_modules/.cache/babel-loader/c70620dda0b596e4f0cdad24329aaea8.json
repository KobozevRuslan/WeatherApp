{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/weather/weater-app/src/modules/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport SearchInput from './components/searchInput/SearchInput';\nimport WeatherItems from './components/weatherList/WeatherItems';\nimport { fetchWeather } from '../service/ApiService';\nimport { MainWrapper } from './styledComponents/App';\nimport GlobalStyle from '../styledComponents/GlobalStyle';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { getRepos } from './action/repos';\nimport Repo from './repo/Repo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const repos = useSelector(state => state.repos.items);\n  console.log('repos');\n  useEffect(() => {\n    dispatch(getRepos());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this); // const [query, setQuery] = useState('');\n  // const [weather, setWeather] = useState({});\n  // const search = async (e) => {\n  //   if (e.key === 'Enter') {\n  //     const data = await fetchWeather(query);\n  //     setWeather(data);\n  //     setQuery('');\n  //   }\n  // };\n  // return (\n  //   <MainWrapper>\n  //     <SearchInput query={query} setQuery={setQuery} search={search} />\n  //     <WeatherItems weather={weather} />\n  //     <GlobalStyle />\n  //   </MainWrapper>\n  // );\n};\n\n_s(App, \"XbDkWTX81kYI1vH/avZNSDxV/qU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/weather/weater-app/src/modules/App.jsx"],"names":["React","useEffect","useState","SearchInput","WeatherItems","fetchWeather","MainWrapper","GlobalStyle","useDispatch","useSelector","getRepos","Repo","App","dispatch","repos","state","items","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,SAASC,YAAT,QAA6B,uBAA7B;AAEA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,KAAK,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,KAAN,CAAYE,KAAxB,CAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACH,QAAQ,EAAT,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CATgB,CAchB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAhCD;;GAAME,G;UACaJ,W,EACHC,W;;;KAFVG,G;AAkCN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport SearchInput from './components/searchInput/SearchInput';\nimport WeatherItems from './components/weatherList/WeatherItems';\n\nimport { fetchWeather } from '../service/ApiService';\n\nimport { MainWrapper } from './styledComponents/App';\nimport GlobalStyle from '../styledComponents/GlobalStyle';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { getRepos } from './action/repos';\nimport Repo from './repo/Repo';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const repos = useSelector((state) => state.repos.items);\n  console.log('repos');\n\n  useEffect(() => {\n    dispatch(getRepos());\n  }, []);\n\n  return (\n    <div>\n      test\n    </div>\n  );\n  // const [query, setQuery] = useState('');\n  // const [weather, setWeather] = useState({});\n\n  // const search = async (e) => {\n  //   if (e.key === 'Enter') {\n  //     const data = await fetchWeather(query);\n  //     setWeather(data);\n  //     setQuery('');\n  //   }\n  // };\n\n  // return (\n  //   <MainWrapper>\n  //     <SearchInput query={query} setQuery={setQuery} search={search} />\n  //     <WeatherItems weather={weather} />\n  //     <GlobalStyle />\n  //   </MainWrapper>\n  // );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}