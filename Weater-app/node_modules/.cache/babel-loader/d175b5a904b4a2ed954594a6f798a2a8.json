{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/WeatherApp/Weater-app/src/modules/languageFolder/Index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/React.createContext();\nconst LanguageConsumer = LanguageContext.Consumer; // export default class LanguageProvider extends React.Component {\n//   state = {\n//     language: \"french\"\n//   };\n//   updateLanguage = e => this.setState({ language: e.target.value });\n//   render() {\n//     return (\n//       <LanguageContext.Provider\n//         value={{\n//           language: this.state.language,\n//           updateLanguage: this.updateLanguage\n//         }}\n//       >\n//         {this.props.children}\n//       </LanguageContext.Provider>\n//     );\n//   }\n// }\n\nexport const LanguageProvider = props => {\n  _s();\n\n  const [language, setLanguage] = useState('french');\n\n  const updateLangug = e => {\n    return setLanguage();\n  };\n\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LanguageProvider, \"D6nghAUAVLOb5L475RJPpTHSo/Y=\");\n\n_c = LanguageProvider;\nexport const HeaderTest = () => {\n  return /*#__PURE__*/_jsxDEV(LanguageConsumer, {\n    children: ({\n      updateLanguage\n    }) => /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [\"see this site in\", /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: updateLanguage,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"french\",\n          children: \"french\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"english\",\n          children: \"english\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"italian\",\n          children: \"italian\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c2 = HeaderTest;\nexport const TranslatableText = props => /*#__PURE__*/_jsxDEV(LanguageConsumer, {\n  children: ({\n    language\n  }) => props.dictionary[language]\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 59,\n  columnNumber: 3\n}, this);\n_c3 = TranslatableText;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LanguageProvider\");\n$RefreshReg$(_c2, \"HeaderTest\");\n$RefreshReg$(_c3, \"TranslatableText\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/WeatherApp/Weater-app/src/modules/languageFolder/Index.jsx"],"names":["React","useState","LanguageContext","createContext","LanguageConsumer","Consumer","LanguageProvider","props","language","setLanguage","updateLangug","e","children","HeaderTest","updateLanguage","TranslatableText","dictionary"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,eAAe,gBAAGF,KAAK,CAACG,aAAN,EAAxB;AACA,MAAMC,gBAAgB,GAAGF,eAAe,CAACG,QAAzC,C,CAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AACzC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,QAAD,CAAxC;;AAEA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AAC1B,WAAOF,WAAW,EAAlB;AACD,GAFD;;AAGA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAAA,cACGF,KAAK,CAACK;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAXM;;GAAMN,gB;;KAAAA,gB;AAab,OAAO,MAAMO,UAAU,GAAG,MAAM;AAC9B,sBACE,QAAC,gBAAD;AAAA,cACG,CAAC;AAAEC,MAAAA;AAAF,KAAD,kBACC;AAAA,kDAEE;AAAQ,QAAA,QAAQ,EAAEA,cAAlB;AAAA,gCACE;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfM;MAAMD,U;AAkBb,OAAO,MAAME,gBAAgB,GAAGR,KAAK,iBACnC,QAAC,gBAAD;AAAA,YACG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAkBD,KAAK,CAACS,UAAN,CAAiBR,QAAjB;AADrB;AAAA;AAAA;AAAA;AAAA,QADK;MAAMO,gB","sourcesContent":["import React, { useState } from \"react\";\n\nconst LanguageContext = React.createContext();\nconst LanguageConsumer = LanguageContext.Consumer;\n\n// export default class LanguageProvider extends React.Component {\n//   state = {\n//     language: \"french\"\n//   };\n\n//   updateLanguage = e => this.setState({ language: e.target.value });\n\n//   render() {\n//     return (\n//       <LanguageContext.Provider\n//         value={{\n//           language: this.state.language,\n//           updateLanguage: this.updateLanguage\n//         }}\n//       >\n//         {this.props.children}\n//       </LanguageContext.Provider>\n//     );\n//   }\n// }\n\nexport const LanguageProvider = (props) => {\n  const [language, setLanguage] = useState('french')\n\n  const updateLangug = (e) => {\n    return setLanguage()\n  }\n  return(\n    <LanguageContext.Provider>\n      {props.children}\n    </LanguageContext.Provider>\n  )\n}\n\nexport const HeaderTest = () => {\n  return (\n    <LanguageConsumer>\n      {({ updateLanguage }) => (\n        <header>\n          see this site in\n          <select onChange={updateLanguage}>\n            <option value=\"french\">french</option>\n            <option value=\"english\">english</option>\n            <option value=\"italian\">italian</option>\n          </select>\n        </header>\n      )}\n    </LanguageConsumer>\n  );\n};\n\n\nexport const TranslatableText = props => (\n  <LanguageConsumer>\n    {({ language }) => props.dictionary[language]}\n  </LanguageConsumer>\n);\n"]},"metadata":{},"sourceType":"module"}