{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_KEY = 'd6487c851d4294ca86263fcb2861f71f';\nconst URL = 'https://api.openweathermap.org/data/2.5/weather'; //action\n\nexport const fetchWeatherAction = createAsyncThunk('weather/fetch', async (payload, city) => {\n  try {\n    const {\n      data\n    } = await axios.get(URL, {\n      params: {\n        q: payload,\n        units: 'metric',\n        APPID: API_KEY\n      }\n    });\n    return data;\n  } catch (error) {\n    if (!(error === null || error === void 0 ? void 0 : error.response)) {\n      throw error;\n    } // return rejectWithValue(error?.response?.data);\n\n  }\n}); //slice\n\nconst weatherSlice = createSlice({\n  name: 'weather',\n  initialState: {},\n  extraReducers: builder => {\n    //pending\n    builder.addCase(fetchWeatherAction.pending, state => {\n      state.isLoading = true;\n    }); //fulfilled\n\n    builder.addCase(fetchWeatherAction.fulfilled, (state, action) => {\n      state.weather = action === null || action === void 0 ? void 0 : action.payload;\n      state.isLoading = false;\n      state.error = undefined;\n    }); //rejected\n\n    builder.addCase(fetchWeatherAction.rejected, (state, action) => {\n      state.isLoading = false;\n      state.weather = undefined;\n      state.languege = undefined;\n      state.error = action === null || action === void 0 ? void 0 : action.payload;\n    });\n  }\n});\nexport default weatherSlice.reducer;","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/WeatherApp/Weater-app/src/redux/slices/weatherSlices.js"],"names":["createAsyncThunk","createSlice","axios","API_KEY","URL","fetchWeatherAction","payload","city","data","get","params","q","units","APPID","error","response","weatherSlice","name","initialState","extraReducers","builder","addCase","pending","state","isLoading","fulfilled","action","weather","undefined","rejected","languege","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;AACA,MAAMC,GAAG,GAAG,iDAAZ,C,CAEA;;AACA,OAAO,MAAMC,kBAAkB,GAAGL,gBAAgB,CAChD,eADgD,EAEhD,OAAOM,OAAP,EAAgBC,IAAhB,KAAyB;AACvB,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMN,KAAK,CAACO,GAAN,CAAUL,GAAV,EAAe;AACpCM,MAAAA,MAAM,EAAE;AACNC,QAAAA,CAAC,EAAEL,OADG;AAENM,QAAAA,KAAK,EAAE,QAFD;AAGNC,QAAAA,KAAK,EAAEV;AAHD;AAD4B,KAAf,CAAvB;AAOA,WAAOK,IAAP;AACD,GATD,CASE,OAAOM,KAAP,EAAc;AACd,QAAI,EAACA,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEC,QAAR,CAAJ,EAAsB;AACpB,YAAMD,KAAN;AACD,KAHa,CAId;;AACD;AACF,CAlB+C,CAA3C,C,CAqBP;;AACA,MAAME,YAAY,GAAGf,WAAW,CAAC;AAC/BgB,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAE,EAFiB;AAG/BC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1B;AACAA,IAAAA,OAAO,CAACC,OAAR,CAAgBhB,kBAAkB,CAACiB,OAAnC,EAA6CC,KAAD,IAAW;AACrDA,MAAAA,KAAK,CAACC,SAAN,GAAkB,IAAlB;AACD,KAFD,EAF0B,CAK1B;;AACAJ,IAAAA,OAAO,CAACC,OAAR,CAAgBhB,kBAAkB,CAACoB,SAAnC,EAA8C,CAACF,KAAD,EAAQG,MAAR,KAAmB;AAC/DH,MAAAA,KAAK,CAACI,OAAN,GAAgBD,MAAhB,aAAgBA,MAAhB,uBAAgBA,MAAM,CAAEpB,OAAxB;AACAiB,MAAAA,KAAK,CAACC,SAAN,GAAkB,KAAlB;AACAD,MAAAA,KAAK,CAACT,KAAN,GAAcc,SAAd;AACD,KAJD,EAN0B,CAW1B;;AACAR,IAAAA,OAAO,CAACC,OAAR,CAAgBhB,kBAAkB,CAACwB,QAAnC,EAA6C,CAACN,KAAD,EAAQG,MAAR,KAAmB;AAC9DH,MAAAA,KAAK,CAACC,SAAN,GAAkB,KAAlB;AACAD,MAAAA,KAAK,CAACI,OAAN,GAAgBC,SAAhB;AACAL,MAAAA,KAAK,CAACO,QAAN,GAAiBF,SAAjB;AACAL,MAAAA,KAAK,CAACT,KAAN,GAAcY,MAAd,aAAcA,MAAd,uBAAcA,MAAM,CAAEpB,OAAtB;AAED,KAND;AAOD;AAtB8B,CAAD,CAAhC;AAyBA,eAAeU,YAAY,CAACe,OAA5B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst API_KEY = 'd6487c851d4294ca86263fcb2861f71f';\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\n\n//action\nexport const fetchWeatherAction = createAsyncThunk(\n  'weather/fetch',\n  async (payload, city) => {\n    try {\n      const { data } = await axios.get(URL, {\n        params: {\n          q: payload,\n          units: 'metric',\n          APPID: API_KEY,\n        },\n      });\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      // return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n//slice\nconst weatherSlice = createSlice({\n  name: 'weather',\n  initialState: {},\n  extraReducers: (builder) => {\n    //pending\n    builder.addCase(fetchWeatherAction.pending, (state) => {\n      state.isLoading = true;\n    });\n    //fulfilled\n    builder.addCase(fetchWeatherAction.fulfilled, (state, action) => {\n      state.weather = action?.payload;\n      state.isLoading = false;\n      state.error = undefined;\n    });\n    //rejected\n    builder.addCase(fetchWeatherAction.rejected, (state, action) => {\n      state.isLoading = false;\n      state.weather = undefined;\n      state.languege = undefined;\n      state.error = action?.payload;\n\n    });\n  },\n});\n\nexport default weatherSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}