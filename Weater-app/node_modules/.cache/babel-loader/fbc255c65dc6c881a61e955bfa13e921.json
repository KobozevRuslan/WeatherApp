{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/weather/weater-app/src/modules/components/weatherList/WeatherItems.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchWeatherAction } from '../../../redux/slices/weatherSlices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeatherItems = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchWeatherAction('london'));\n  }, []); // select state from store\n\n  const state = useSelector(state => state);\n  const {\n    weather,\n    loading,\n    error\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [weather === null || weather === void 0 ? void 0 : weather.name, \", \", weather === null || weather === void 0 ? void 0 : weather.sys.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [Math.round(weather === null || weather === void 0 ? void 0 : weather.main.temp), /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://openweathermap.org/img/wn/${weather === null || weather === void 0 ? void 0 : weather.weather[0].icon}@2x.png`,\n          alt: weather === null || weather === void 0 ? void 0 : weather.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: weather === null || weather === void 0 ? void 0 : weather.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(WeatherItems, \"AfGwZBpDcyZ4hjuRBqb3pHilgDc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = WeatherItems;\nWeatherItems.propTypes = {\n  weather: PropTypes.object.isRequired\n};\nexport default WeatherItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherItems\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/weather/weater-app/src/modules/components/weatherList/WeatherItems.jsx"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","fetchWeatherAction","WeatherItems","dispatch","state","weather","loading","error","name","sys","country","Math","round","main","temp","icon","description","propTypes","object","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,qCAAnC;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACF,kBAAkB,CAAC,QAAD,CAAnB,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT,CAHyB,CAOzB;;AACA,QAAMG,KAAK,GAAGJ,WAAW,CAAEI,KAAD,IAAWA,KAAZ,CAAzB;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAA8BH,KAApC;AACA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA,+BACE;AAAA,qBAAOC,OAAP,aAAOA,OAAP,uBAAOA,OAAO,CAAEG,IAAhB,QAAwBH,OAAxB,aAAwBA,OAAxB,uBAAwBA,OAAO,CAAEI,GAAT,CAAaC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,mBACGC,IAAI,CAACC,KAAL,CAAWP,OAAX,aAAWA,OAAX,uBAAWA,OAAO,CAAEQ,IAAT,CAAcC,IAAzB,CADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE;AAAA,gCACE;AACE,UAAA,GAAG,EAAG,qCAAoCT,OAArC,aAAqCA,OAArC,uBAAqCA,OAAO,CAAEA,OAAT,CAAiB,CAAjB,EAAoBU,IAAK,SADrE;AAEE,UAAA,GAAG,EAAEV,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEA,OAAT,CAAiB,CAAjB,EAAoBW;AAF3B;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAA,oBAAIX,OAAJ,aAAIA,OAAJ,uBAAIA,OAAO,CAAEA,OAAT,CAAiB,CAAjB,EAAoBW;AAAxB;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqBD,CA/BD;;GAAMd,Y;UACaH,W,EAOHC,W;;;KARVE,Y;AAiCNA,YAAY,CAACe,SAAb,GAAyB;AACvBZ,EAAAA,OAAO,EAAEP,SAAS,CAACoB,MAAV,CAAiBC;AADH,CAAzB;AAIA,eAAejB,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchWeatherAction } from '../../../redux/slices/weatherSlices';\n\nconst WeatherItems = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchWeatherAction('london'));\n  }, []);\n\n  // select state from store\n  const state = useSelector((state) => state);\n  const { weather, loading, error } = state;\n  return (\n    <>\n      <div>\n        <h2>\n          <span>{weather?.name}, {weather?.sys.country}</span>\n          {/* <sup></sup> */}\n        </h2>\n        <div>\n          {Math.round(weather?.main.temp)}\n          <sup>&deg;C</sup>\n        </div>\n        <div>\n          <img\n            src={`https://openweathermap.org/img/wn/${weather?.weather[0].icon}@2x.png`}\n            alt={weather?.weather[0].description}\n          />\n          <p>{weather?.weather[0].description}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nWeatherItems.propTypes = {\n  weather: PropTypes.object.isRequired,\n};\n\nexport default WeatherItems;\n"]},"metadata":{},"sourceType":"module"}