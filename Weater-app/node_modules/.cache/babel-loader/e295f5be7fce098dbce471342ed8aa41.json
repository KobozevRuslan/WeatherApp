{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/weather/weater-app/src/modules/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport SearchInput from './components/searchInput/SearchInput';\nimport GlobalStyle from '../styledComponents/GlobalStyle';\nimport { MainWrapper } from './styledComponents/App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'd6487c851d4294ca86263fcb2861f71f';\nconst options = {\n  method: 'GET',\n  url: 'https://aerisweather1.p.rapidapi.com/sunmoon/ankara,tr',\n  headers: {\n    'x-rapidapi-host': 'aerisweather1.p.rapidapi.com',\n    'x-rapidapi-key': 'c7b76fe4f3msh6906b0e9aad970fp1ac269jsn96309e4eff48'\n  }\n};\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});\n\nconst App = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState('');\n\n  const getWeather = () => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=London&appid=${API_KEY}`).then(res => {\n      const countries = res.data.name;\n      setData(countries);\n    }).catch(error => {\n      return error;\n    });\n  };\n\n  useEffect(() => {\n    getWeather();\n  }, []); // const filteredData = data.filter(items => {\n  //   console.log(items);\n  //   // return items.Country.toLowerCase().includes(value.toLowerCase());\n  // });\n  // const getWeather = async (e) => {\n  //   e.preventDefault()\n  //   const city = e.target.elements.city.value;\n  //   const api_url = await fetch(\n  //     `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`\n  //   );\n  //   const data = await api_url.json();\n  //   console.log(data);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(MainWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n      setValue: getWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"GwUU7pG7uFDuTx4LAM333zlp1/M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/weather/weater-app/src/modules/App.jsx"],"names":["React","useEffect","useState","axios","SearchInput","GlobalStyle","MainWrapper","API_KEY","options","method","url","headers","request","then","response","console","log","data","catch","error","App","setData","value","setValue","getWeather","get","res","countries","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,sCAAxB;AAEA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,MAAMC,OAAO,GAAG,kCAAhB;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,KADM;AAEdC,EAAAA,GAAG,EAAE,wDAFS;AAGdC,EAAAA,OAAO,EAAE;AACP,uBAAmB,8BADZ;AAEP,sBAAkB;AAFX;AAHK,CAAhB;AASAR,KAAK,CAACS,OAAN,CAAcJ,OAAd,EAAuBK,IAAvB,CAA4B,UAAUC,QAAV,EAAoB;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,CAFD,EAEGC,KAFH,CAES,UAAUC,KAAV,EAAiB;AACzBJ,EAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACA,CAJD;;AAMA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACH,IAAD,EAAOI,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMsB,UAAU,GAAG,MAAM;AACvBrB,IAAAA,KAAK,CAACsB,GAAN,CAAW,kEAAiElB,OAAQ,EAApF,EACGM,IADH,CACQa,GAAG,IAAI;AACX,YAAMC,SAAS,GAAGD,GAAG,CAACT,IAAJ,CAASW,IAA3B;AACAP,MAAAA,OAAO,CAACM,SAAD,CAAP;AACD,KAJH,EAKGT,KALH,CAKSC,KAAK,IAAI;AACd,aAAOA,KAAP;AACD,KAPH;AAQD,GATD;;AAWAlB,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT,CAfgB,CAmBhB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,QAAC,WAAD;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAxCD;;GAAMJ,G;;KAAAA,G;AA0CN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport SearchInput from './components/searchInput/SearchInput';\n\nimport GlobalStyle from '../styledComponents/GlobalStyle';\nimport { MainWrapper } from './styledComponents/App';\n\nconst API_KEY = 'd6487c851d4294ca86263fcb2861f71f';\n\nconst options = {\n  method: 'GET',\n  url: 'https://aerisweather1.p.rapidapi.com/sunmoon/ankara,tr',\n  headers: {\n    'x-rapidapi-host': 'aerisweather1.p.rapidapi.com',\n    'x-rapidapi-key': 'c7b76fe4f3msh6906b0e9aad970fp1ac269jsn96309e4eff48'\n  }\n};\n\naxios.request(options).then(function (response) {\n\tconsole.log(response.data);\n}).catch(function (error) {\n\tconsole.error(error);\n});\n\nconst App = () => {\n  const [data, setData] = useState([])\n  const [value, setValue] = useState('');\n\n  const getWeather = () => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=London&appid=${API_KEY}`)\n      .then(res => {\n        const countries = res.data.name;\n        setData(countries);\n      })\n      .catch(error => {\n        return error;\n      });\n  }\n\n  useEffect(() => {\n    getWeather()\n  }, [])\n\n  // const filteredData = data.filter(items => {\n  //   console.log(items);\n  //   // return items.Country.toLowerCase().includes(value.toLowerCase());\n  // });\n\n  // const getWeather = async (e) => {\n  //   e.preventDefault()\n  //   const city = e.target.elements.city.value;\n  //   const api_url = await fetch(\n  //     `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`\n  //   );\n  //   const data = await api_url.json();\n  //   console.log(data);\n  // };\n\n  return (\n    <MainWrapper>\n      <SearchInput setValue={getWeather} />\n      <GlobalStyle />\n    </MainWrapper>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}