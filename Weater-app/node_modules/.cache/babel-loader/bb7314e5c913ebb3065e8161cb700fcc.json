{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/WeatherApp/Weater-app/src/modules/components/main/dailyWeather/DailyWeather.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux'; // import { fetchWeatherAction } from '../../../../store/redux/slices/weatherSlices';\n\nimport { fetchData } from '../../../../store/thunk/action/app';\nimport { MainDailyWeatherWrapper, DailyWeatherWrapper } from './styledComponents/DailyWeather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DailyWeather = () => {\n  _s();\n\n  var _error;\n\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch(); // useEffect(() => {\n  //   dispatch(fetchWeatherAction('Kyiv'));\n  // }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(fetchData());\n  }, [dispatch]); // const state = useSelector((state) => state.app.data);\n  // console.log('state', state);\n\n  const state = useSelector(state => state.app);\n  const {\n    weather\n  } = state;\n  console.log('weather', weather);\n  return /*#__PURE__*/_jsxDEV(MainDailyWeatherWrapper, {\n    children: [\"test\", weather && weather.main.temp, isLoading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: t('mainePageWeather.loading')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: (_error = error) === null || _error === void 0 ? void 0 : _error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DailyWeatherWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dailyWeatherCardInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [Math.floor(weather === null || weather === void 0 ? void 0 : weather.main.temp), /*#__PURE__*/_jsxDEV(\"sup\", {\n              children: \"\\xB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://openweathermap.org/img/wn/${weather === null || weather === void 0 ? void 0 : weather.weather[0].icon}@2x.png`,\n            alt: weather === null || weather === void 0 ? void 0 : weather.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dailyWeatherCardInfo\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: t('mainePageWeather.today')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dailyWeatherItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [t('mainePageWeather.city'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: weather === null || weather === void 0 ? void 0 : weather.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: weather === null || weather === void 0 ? void 0 : weather.sys.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DailyWeather, \"v/+MlDKW+SsJH54MxKKXDvE6i4o=\", false, function () {\n  return [useTranslation, useDispatch, useSelector];\n});\n\n_c = DailyWeather;\nexport default DailyWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"DailyWeather\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/WeatherApp/Weater-app/src/modules/components/main/dailyWeather/DailyWeather.jsx"],"names":["React","useEffect","useTranslation","useDispatch","useSelector","fetchData","MainDailyWeatherWrapper","DailyWeatherWrapper","DailyWeather","t","dispatch","state","app","weather","console","log","main","temp","isLoading","error","message","Math","floor","icon","description","name","sys","country"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,SAASC,SAAT,QAA0B,oCAA1B;AAGA,SACEC,uBADF,EAEEC,mBAFF,QAGO,iCAHP;;;AAKA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAQP,cAAc,EAA5B;AAEA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B,CAHyB,CAKzB;AACA;AACA;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACL,SAAS,EAAV,CAAR;AACD,GAFQ,EAEN,CAACK,QAAD,CAFM,CAAT,CARyB,CAYzB;AACA;;AACA,QAAMC,KAAK,GAAGP,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,GAAhB,CAAzB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAcF,KAApB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,OAAvB;AAEA,sBACE,QAAC,uBAAD;AAAA,uBAEGA,OAAO,IAAIA,OAAO,CAACG,IAAR,CAAaC,IAF3B,EAGGC,SAAS,gBACR;AAAA,gBAAKT,CAAC,CAAC,0BAAD;AAAN;AAAA;AAAA;AAAA;AAAA,YADQ,GAENU,KAAK,gBACP;AAAA,0BAAKA,KAAL,2CAAK,OAAOC;AAAZ;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP,QAAC,mBAAD;AAAA,8BACE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCACE;AAAA,uBACGC,IAAI,CAACC,KAAL,CAAWT,OAAX,aAAWA,OAAX,uBAAWA,OAAO,CAAEG,IAAT,CAAcC,IAAzB,CADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AACE,YAAA,GAAG,EAAG,qCAAoCJ,OAArC,aAAqCA,OAArC,uBAAqCA,OAAO,CAAEA,OAAT,CAAiB,CAAjB,EAAoBU,IAAK,SADrE;AAEE,YAAA,GAAG,EAAEV,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEA,OAAT,CAAiB,CAAjB,EAAoBW;AAF3B;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,iCACE;AAAA,sBAAKf,CAAC,CAAC,wBAAD;AAAN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAA,qBAAIA,CAAC,CAAC,uBAAD,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOI,OAAP,aAAOA,OAAP,uBAAOA,OAAO,CAAEY;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAMZ,OAAN,aAAMA,OAAN,uBAAMA,OAAO,CAAEa,GAAT,CAAaC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CArDD;;GAAMnB,Y;UACUN,c,EAEGC,W,EAWHC,W;;;KAdVI,Y;AAuDN,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import { fetchWeatherAction } from '../../../../store/redux/slices/weatherSlices';\nimport { fetchData } from '../../../../store/thunk/action/app';\n\n\nimport {\n  MainDailyWeatherWrapper,\n  DailyWeatherWrapper,\n} from './styledComponents/DailyWeather';\n\nconst DailyWeather = () => {\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(fetchWeatherAction('Kyiv'));\n  // }, [dispatch]);\n  useEffect(() => {\n    dispatch(fetchData());\n  }, [dispatch]);\n\n  // const state = useSelector((state) => state.app.data);\n  // console.log('state', state);\n  const state = useSelector(state => state.app);\n  \n  const { weather } = state;\n  console.log('weather', weather);\n\n  return (\n    <MainDailyWeatherWrapper>\n      test\n      {weather && weather.main.temp}\n      {isLoading ? (\n        <h2>{t('mainePageWeather.loading')}</h2>\n      ) : error ? (\n        <h3>{error?.message}</h3>\n      ) : (\n        <DailyWeatherWrapper>\n          <div>\n            <div className=\"dailyWeatherCardInfo\">\n              <h1>\n                {Math.floor(weather?.main.temp)}\n                <sup>&deg;</sup>\n              </h1>\n              <img\n                src={`https://openweathermap.org/img/wn/${weather?.weather[0].icon}@2x.png`}\n                alt={weather?.weather[0].description}\n              />\n            </div>\n            <div className=\"dailyWeatherCardInfo\">\n              <h3>{t('mainePageWeather.today')}</h3>\n            </div>\n          </div>\n          <div className=\"dailyWeatherItem\">\n            <p>{t('mainePageWeather.city')}:</p>\n            <span>{weather?.name}</span>\n            <sup>{weather?.sys.country}</sup>\n          </div>\n        </DailyWeatherWrapper>\n      )}\n    </MainDailyWeatherWrapper>\n  );\n};\n\nexport default DailyWeather;\n"]},"metadata":{},"sourceType":"module"}