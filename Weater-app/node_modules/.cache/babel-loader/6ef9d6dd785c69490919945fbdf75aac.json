{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/weather/weater-app/src/modules/components/weatherList/WeatherItems.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchWeatherAction } from '../../../redux/slices/weatherSlices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeatherItems = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchWeatherAction('London'));\n  }, []); // select state from store\n\n  const state = useSelector(state => state);\n  const {\n    weather,\n    loading,\n    error\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading please wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error === null || error === void 0 ? void 0 : error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [weather === null || weather === void 0 ? void 0 : weather.name, \",\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: weather === null || weather === void 0 ? void 0 : weather.sys.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [Math.round(weather === null || weather === void 0 ? void 0 : weather.main.temp), /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://openweathermap.org/img/wn/${weather === null || weather === void 0 ? void 0 : weather.weather[0].icon}@2x.png`,\n          alt: weather === null || weather === void 0 ? void 0 : weather.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: weather === null || weather === void 0 ? void 0 : weather.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(WeatherItems, \"AfGwZBpDcyZ4hjuRBqb3pHilgDc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = WeatherItems;\nWeatherItems.propTypes = {\n  weather: PropTypes.object.isRequired\n};\nexport default WeatherItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherItems\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/weather/weater-app/src/modules/components/weatherList/WeatherItems.jsx"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","fetchWeatherAction","WeatherItems","dispatch","state","weather","loading","error","message","name","sys","country","Math","round","main","temp","icon","description","propTypes","object","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,qCAAnC;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACF,kBAAkB,CAAC,QAAD,CAAnB,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT,CAHyB,CAOzB;;AACA,QAAMG,KAAK,GAAGJ,WAAW,CAAEI,KAAD,IAAWA,KAAZ,CAAzB;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAA8BH,KAApC;AACA,sBACE;AAAA,cACGE,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,GAEJC,KAAK,gBACP;AAAA,gBAAKA,KAAL,aAAKA,KAAL,uBAAKA,KAAK,CAAEC;AAAZ;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP;AAAA,8BACE;AAAA,gCACE;AAAA,qBACGH,OADH,aACGA,OADH,uBACGA,OAAO,CAAEI,IADZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,oBAAMJ,OAAN,aAAMA,OAAN,uBAAMA,OAAO,CAAEK,GAAT,CAAaC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,mBACGC,IAAI,CAACC,KAAL,CAAWR,OAAX,aAAWA,OAAX,uBAAWA,OAAO,CAAES,IAAT,CAAcC,IAAzB,CADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAWE;AAAA,gCACE;AACE,UAAA,GAAG,EAAG,qCAAoCV,OAArC,aAAqCA,OAArC,uBAAqCA,OAAO,CAAEA,OAAT,CAAiB,CAAjB,EAAoBW,IAAK,SADrE;AAEE,UAAA,GAAG,EAAEX,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEA,OAAT,CAAiB,CAAjB,EAAoBY;AAF3B;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAA,oBAAIZ,OAAJ,aAAIA,OAAJ,uBAAIA,OAAO,CAAEA,OAAT,CAAiB,CAAjB,EAAoBY;AAAxB;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ,mBADF;AA6BD,CAvCD;;GAAMf,Y;UACaH,W,EAOHC,W;;;KARVE,Y;AAyCNA,YAAY,CAACgB,SAAb,GAAyB;AACvBb,EAAAA,OAAO,EAAEP,SAAS,CAACqB,MAAV,CAAiBC;AADH,CAAzB;AAIA,eAAelB,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchWeatherAction } from '../../../redux/slices/weatherSlices';\n\nconst WeatherItems = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchWeatherAction('London'));\n  }, []);\n\n  // select state from store\n  const state = useSelector((state) => state);\n  const { weather, loading, error } = state;\n  return (\n    <>\n      {loading ? (\n        <h1>Loading please wait...</h1>\n      ) : error ? (\n        <h1>{error?.message}</h1>\n      ) : (\n        <div>\n          <h2>\n            <span>\n              {weather?.name}, \n            </span>\n            <sup>{weather?.sys.country}</sup>\n          </h2>\n          <div>\n            {Math.round(weather?.main.temp)}\n            <sup>&deg;C</sup>\n          </div>\n          <div>\n            <img\n              src={`https://openweathermap.org/img/wn/${weather?.weather[0].icon}@2x.png`}\n              alt={weather?.weather[0].description}\n            />\n            <p>{weather?.weather[0].description}</p>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nWeatherItems.propTypes = {\n  weather: PropTypes.object.isRequired,\n};\n\nexport default WeatherItems;\n"]},"metadata":{},"sourceType":"module"}