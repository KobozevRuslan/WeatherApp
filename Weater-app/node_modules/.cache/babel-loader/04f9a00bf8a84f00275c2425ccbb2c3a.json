{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/weather/weater-app/src/modules/components/weatherList/WeatherItems.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchWeatherAction } from '../../../redux/slices/weatherSlices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeatherItems = () => {\n  _s();\n\n  // const [city, setCity] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchWeatherAction('london'));\n  }, []); // select state from store\n\n  const state = useSelector(state => state);\n  const {\n    weather,\n    loading,\n    error\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: city,\n      onChange: e => dispatch(fetchWeatherAction(e.target.value)),\n      placeholder: \"Search...\",\n      onClick: () => dispatch(fetchWeatherAction(city))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [weather === null || weather === void 0 ? void 0 : weather.name, \", \", weather === null || weather === void 0 ? void 0 : weather.sys.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Math.round(weather === null || weather === void 0 ? void 0 : weather.main.temp), /*#__PURE__*/_jsxDEV(\"sup\", {\n        children: \"\\xB0C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://openweathermap.org/img/wn/${weather === null || weather === void 0 ? void 0 : weather.weather[0].icon}@2x.png`,\n        alt: weather === null || weather === void 0 ? void 0 : weather.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather === null || weather === void 0 ? void 0 : weather.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(WeatherItems, \"AfGwZBpDcyZ4hjuRBqb3pHilgDc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = WeatherItems;\nWeatherItems.propTypes = {\n  weather: PropTypes.object.isRequired\n};\nexport default WeatherItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherItems\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/weather/weater-app/src/modules/components/weatherList/WeatherItems.jsx"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","fetchWeatherAction","WeatherItems","dispatch","state","weather","loading","error","city","e","target","value","name","sys","country","Math","round","main","temp","icon","description","propTypes","object","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,qCAAnC;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACF,kBAAkB,CAAC,QAAD,CAAnB,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT,CAJyB,CAQzB;;AACA,QAAMG,KAAK,GAAGJ,WAAW,CAAEI,KAAD,IAAWA,KAAZ,CAAzB;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAA8BH,KAApC;AACA,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEI,IAFT;AAGE,MAAA,QAAQ,EAAGC,CAAD,IAAON,QAAQ,CAACF,kBAAkB,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnB,CAH3B;AAIE,MAAA,WAAW,EAAC,WAJd;AAKE,MAAA,OAAO,EAAE,MAAMR,QAAQ,CAACF,kBAAkB,CAACO,IAAD,CAAnB;AALzB;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA,6BACE;AAAA,mBACGH,OADH,aACGA,OADH,uBACGA,OAAO,CAAEO,IADZ,QACoBP,OADpB,aACoBA,OADpB,uBACoBA,OAAO,CAAEQ,GAAT,CAAaC,OADjC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF,eAaE;AAAA,iBACGC,IAAI,CAACC,KAAL,CAAWX,OAAX,aAAWA,OAAX,uBAAWA,OAAO,CAAEY,IAAT,CAAcC,IAAzB,CADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAiBE;AAAA,8BACE;AACE,QAAA,GAAG,EAAG,qCAAoCb,OAArC,aAAqCA,OAArC,uBAAqCA,OAAO,CAAEA,OAAT,CAAiB,CAAjB,EAAoBc,IAAK,SADrE;AAEE,QAAA,GAAG,EAAEd,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEA,OAAT,CAAiB,CAAjB,EAAoBe;AAF3B;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,kBAAIf,OAAJ,aAAIA,OAAJ,uBAAIA,OAAO,CAAEA,OAAT,CAAiB,CAAjB,EAAoBe;AAAxB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA,kBADF;AA2BD,CAtCD;;GAAMlB,Y;UAEaH,W,EAOHC,W;;;KATVE,Y;AAwCNA,YAAY,CAACmB,SAAb,GAAyB;AACvBhB,EAAAA,OAAO,EAAEP,SAAS,CAACwB,MAAV,CAAiBC;AADH,CAAzB;AAIA,eAAerB,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchWeatherAction } from '../../../redux/slices/weatherSlices';\n\nconst WeatherItems = () => {\n  // const [city, setCity] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchWeatherAction('london'));\n  }, []);\n\n  // select state from store\n  const state = useSelector((state) => state);\n  const { weather, loading, error } = state;\n  return (\n    <>\n      <input\n        type=\"text\"\n        value={city}\n        onChange={(e) => dispatch(fetchWeatherAction(e.target.value))}\n        placeholder=\"Search...\"\n        onClick={() => dispatch(fetchWeatherAction(city))}\n      />\n      <h2>\n        <span>\n          {weather?.name}, {weather?.sys.country}\n        </span>\n      </h2>\n      <div>\n        {Math.round(weather?.main.temp)}\n        <sup>&deg;C</sup>\n      </div>\n      <div>\n        <img\n          src={`https://openweathermap.org/img/wn/${weather?.weather[0].icon}@2x.png`}\n          alt={weather?.weather[0].description}\n        />\n        <p>{weather?.weather[0].description}</p>\n      </div>\n    </>\n  );\n};\n\nWeatherItems.propTypes = {\n  weather: PropTypes.object.isRequired,\n};\n\nexport default WeatherItems;\n"]},"metadata":{},"sourceType":"module"}