{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getRepos } from '../../../store/action/repos'; // const WeatherItems = ({ weather }) => {\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherItems = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const repos = useSelector(state => state.repos.data);\n  useEffect(() => {\n    dispatch(getRepos());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \")}\"\n  }, void 0, false);\n};\n\n_s(WeatherItems, \"XbDkWTX81kYI1vH/avZNSDxV/qU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = WeatherItems;\nWeatherItems.propTypes = {\n  weather: PropTypes.object.isRequired\n};\nexport default WeatherItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherItems\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/weather/weater-app/src/modules/components/weatherList/WeatherItems.jsx"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","getRepos","WeatherItems","dispatch","repos","state","data","propTypes","weather","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,6BAAzB,C,CAEA;;;;;AACA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEzB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,KAAK,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYE,IAAtB,CAAzB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACF,QAAQ,EAAT,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAA;AAAA,mBADF;AAuBD,CA/BD;;GAAMC,Y;UAEaH,W,EACHC,W;;;KAHVE,Y;AAiCNA,YAAY,CAACK,SAAb,GAAyB;AACvBC,EAAAA,OAAO,EAAEV,SAAS,CAACW,MAAV,CAAiBC;AADH,CAAzB;AAIA,eAAeR,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getRepos } from '../../../store/action/repos';\n\n// const WeatherItems = ({ weather }) => {\nconst WeatherItems = () => {\n\n  const dispatch = useDispatch()\n  const repos = useSelector(state => state.repos.data)\n  \n  useEffect(() => {\n    dispatch(getRepos())\n  }, [])\n  return (\n    <>\n      {/* {weather.main && (\n        <div>\n          <h2>\n            <span>{weather.name}</span>\n            <sup>{weather.sys.country}</sup>\n          </h2>\n          <div>\n            {Math.round(weather.main.temp)}\n            <sup>&deg;C</sup>\n          </div>\n          <div>\n            <img\n              src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n              alt={weather.weather[0].description}\n            />\n            <p>{weather.weather[0].description}</p>\n          </div>\n        </div> */}\n      )}\n    </>\n  );\n};\n\nWeatherItems.propTypes = {\n  weather: PropTypes.object.isRequired,\n};\n\nexport default WeatherItems;\n"]},"metadata":{},"sourceType":"module"}