{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_KEY = 'd6487c851d4294ca86263fcb2861f71f';\nexport const fetchWeatherAction = createAsyncThunk('weather/fetch', async (payload, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  try {\n    const {\n      data\n    } = axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${payload}&appid=d6487c851d4294ca86263fcb2861f71f`);\n    return data;\n  } catch (error) {\n    var _error$response;\n\n    if (!(error === null || error === void 0 ? void 0 : error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n}); //slice\n\nconst weatherSlice = createSlice({\n  name: 'weather',\n  initialState: {\n    data: 'Loaded'\n  },\n  extraReducers: builder => {\n    //pending\n    builder.addCase(fetchWeatherAction.pending, (state, action) => {\n      state.loading = true;\n    }); //fulfiled\n\n    builder.addCase(fetchWeatherAction.fulfiled, (state, action) => {\n      state.weather = action === null || action === void 0 ? void 0 : action.payload;\n      state.loading = false;\n      state.error = undefined;\n    }); //rejected\n\n    builder.addCase(fetchWeatherAction.rejected, (state, action) => {\n      state.loading = false;\n      state.weather = undefined;\n      state.error = action === null || action === void 0 ? void 0 : action.payload;\n    });\n  }\n});\nexport default weatherSlice.reducer;","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/weather/weater-app/src/redux/slices/weatherSlices.js"],"names":["createAsyncThunk","createSlice","axios","API_KEY","fetchWeatherAction","payload","rejectWithValue","getState","dispatch","data","get","error","response","weatherSlice","name","initialState","extraReducers","builder","addCase","pending","state","action","loading","fulfiled","weather","undefined","rejected","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;AAEA,OAAO,MAAMC,kBAAkB,GAAGJ,gBAAgB,CAChD,eADgD,EAEhD,OAAOK,OAAP,EAAgB;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA;AAA7B,CAAhB,KAA4D;AAC1D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAWP,KAAK,CAACQ,GAAN,CACd,qDAAoDL,OAAQ,yCAD9C,CAAjB;AAIA,WAAOI,IAAP;AACD,GAND,CAME,OAAOE,KAAP,EAAc;AAAA;;AACd,QAAG,EAACA,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEC,QAAR,CAAH,EAAqB;AACnB,YAAMD,KAAN;AACD;;AACD,WAAOL,eAAe,CAACK,KAAD,aAACA,KAAD,0CAACA,KAAK,CAAEC,QAAR,oDAAC,gBAAiBH,IAAlB,CAAtB;AACD;AACF,CAf+C,CAA3C,C,CAkBP;;AAEA,MAAMI,YAAY,GAAGZ,WAAW,CAAC;AAC/Ba,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAE;AAACN,IAAAA,IAAI,EAAE;AAAP,GAFiB;AAG/BO,EAAAA,aAAa,EAAEC,OAAO,IAAI;AACxB;AACAA,IAAAA,OAAO,CAACC,OAAR,CAAgBd,kBAAkB,CAACe,OAAnC,EAA4C,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7DD,MAAAA,KAAK,CAACE,OAAN,GAAgB,IAAhB;AACD,KAFD,EAFwB,CAKxB;;AACAL,IAAAA,OAAO,CAACC,OAAR,CAAgBd,kBAAkB,CAACmB,QAAnC,EAA6C,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC9DD,MAAAA,KAAK,CAACI,OAAN,GAAgBH,MAAhB,aAAgBA,MAAhB,uBAAgBA,MAAM,CAAEhB,OAAxB;AACAe,MAAAA,KAAK,CAACE,OAAN,GAAgB,KAAhB;AACAF,MAAAA,KAAK,CAACT,KAAN,GAAcc,SAAd;AACD,KAJD,EANwB,CAWxB;;AACAR,IAAAA,OAAO,CAACC,OAAR,CAAgBd,kBAAkB,CAACsB,QAAnC,EAA6C,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC9DD,MAAAA,KAAK,CAACE,OAAN,GAAgB,KAAhB;AACAF,MAAAA,KAAK,CAACI,OAAN,GAAgBC,SAAhB;AACAL,MAAAA,KAAK,CAACT,KAAN,GAAcU,MAAd,aAAcA,MAAd,uBAAcA,MAAM,CAAEhB,OAAtB;AACD,KAJD;AAKD;AApB8B,CAAD,CAAhC;AAuBA,eAAeQ,YAAY,CAACc,OAA5B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst API_KEY = 'd6487c851d4294ca86263fcb2861f71f';\n\nexport const fetchWeatherAction = createAsyncThunk(\n  'weather/fetch',\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    try {\n      const { data } = axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${payload}&appid=d6487c851d4294ca86263fcb2861f71f`\n      );\n\n      return data;\n    } catch (error) {\n      if(!error?.response) {\n        throw error\n      }\n      return rejectWithValue(error?.response?.data)\n    }\n  }\n);\n\n//slice\n\nconst weatherSlice = createSlice({\n  name: 'weather',\n  initialState: {data: 'Loaded'},\n  extraReducers: builder => {\n    //pending\n    builder.addCase(fetchWeatherAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    //fulfiled\n    builder.addCase(fetchWeatherAction.fulfiled, (state, action) => {\n      state.weather = action?.payload;\n      state.loading = false;\n      state.error = undefined;\n    });\n    //rejected\n    builder.addCase(fetchWeatherAction.rejected, (state, action) => {\n      state.loading = false;\n      state.weather = undefined;\n      state.error = action?.payload;\n    });\n  },\n});\n\nexport default weatherSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}