{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/WeatherApp/Weater-app/src/modules/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Suspense, useEffect } from 'react';\nimport Loading from './components/loading/Loading';\nimport Header from './components/header/Header';\nimport Main from './components/main/Main';\nimport { MainAppWrapper } from './styledComponents/App';\nimport GlobalStyle from '../styledComponents/GlobalStyle';\nimport { useDispatch } from 'react-redux';\nimport { fetchData } from '../store/thunk/action/app';\nimport { fetchWeatherAction } from '../redux/slices/weatherSlices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/React.createContext();\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchWeatherAction('London'));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(MainAppWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/WeatherApp/Weater-app/src/modules/App.jsx"],"names":["React","Suspense","useEffect","Loading","Header","Main","MainAppWrapper","GlobalStyle","useDispatch","fetchData","fetchWeatherAction","ThemeContext","createContext","App","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,kBAAT,QAAmC,+BAAnC;;AAEA,OAAO,MAAMC,YAAY,gBAAGX,KAAK,CAACY,aAAN,EAArB;;AAEP,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACJ,kBAAkB,CAAC,QAAD,CAAnB,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,QAAD;AAAU,IAAA,QAAQ,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAApB;AAAA,2BACE,QAAC,cAAD;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAhBD;;GAAMG,G;UACaL,W;;;KADbK,G;AAkBN,eAAeA,GAAf","sourcesContent":["import React, { Suspense, useEffect } from 'react';\n\nimport Loading from './components/loading/Loading';\nimport Header from './components/header/Header';\nimport Main from './components/main/Main';\n\nimport { MainAppWrapper } from './styledComponents/App';\nimport GlobalStyle from '../styledComponents/GlobalStyle';\nimport { useDispatch } from 'react-redux';\nimport { fetchData } from '../store/thunk/action/app';\nimport { fetchWeatherAction } from '../redux/slices/weatherSlices';\n\nexport const ThemeContext = React.createContext();\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchWeatherAction('London'))\n  }, []);\n  \n  return (\n    <Suspense fallback={<Loading />}>\n      <MainAppWrapper>\n        <Header />\n        <Main />\n        <GlobalStyle />\n      </MainAppWrapper>\n    </Suspense>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}