{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/WeatherApp/WeatherApp/Weater-app/src/components/testComponents/Test.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Downshift from 'downshift';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = [{\n  value: 'white'\n}, {\n  value: 'black'\n}, {\n  value: 'red'\n}, {\n  value: 'orange'\n}, {\n  value: 'yellow'\n}, {\n  value: 'green'\n}, {\n  value: 'blue'\n}, {\n  value: 'cyan'\n}, {\n  value: 'purple'\n}, {\n  value: 'pink'\n}];\nexport const Test = () => {\n  _s();\n\n  const state = useSelector(state => state.app);\n  const {\n    weather\n  } = state;\n  return /*#__PURE__*/_jsxDEV(Downshift, {\n    onChange: selection => alert(selection ? `You selected ${selection.value}` : 'Selection Cleared'),\n    itemToString: item => item ? item.value : '',\n    children: ({\n      getInputProps,\n      getItemProps,\n      getLabelProps,\n      getMenuProps,\n      isOpen,\n      inputValue,\n      highlightedIndex,\n      selectedItem,\n      getRootProps\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", { ...getLabelProps(),\n        children: \"What is your favourite color? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block'\n        },\n        ...getRootProps({}, {\n          suppressRefError: true\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", { ...getMenuProps(),\n        children: isOpen ? weather.filter(item => !inputValue || item.value.includes(inputValue)).map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", { ...getItemProps({\n            key: item.value,\n            index,\n            item,\n            style: {\n              backgroundColor: highlightedIndex === index ? 'cyan' : 'white',\n              fontWeight: selectedItem === item ? 'bold' : 'normal'\n            }\n          }),\n          children: item.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Test, \"dFAAPDNEsxQMpRpiSMZXJjfPktw=\", false, function () {\n  return [useSelector];\n});\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/WeatherApp/WeatherApp/Weater-app/src/components/testComponents/Test.jsx"],"names":["React","Downshift","useSelector","colors","value","Test","state","app","weather","selection","alert","item","getInputProps","getItemProps","getLabelProps","getMenuProps","isOpen","inputValue","highlightedIndex","selectedItem","getRootProps","display","suppressRefError","filter","includes","map","index","key","style","backgroundColor","fontWeight"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,MAAM,GAAG,CACb;AAAEC,EAAAA,KAAK,EAAE;AAAT,CADa,EAEb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAFa,EAGb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAHa,EAIb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAJa,EAKb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CALa,EAMb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CANa,EAOb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAPa,EAQb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CARa,EASb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CATa,EAUb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAVa,CAAf;AAaA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAExB,QAAMC,KAAK,GAAGJ,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,GAAlB,CAAzB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAYF,KAAlB;AAEA,sBACE,QAAC,SAAD;AACE,IAAA,QAAQ,EAAGG,SAAD,IACRC,KAAK,CACHD,SAAS,GAAI,gBAAeA,SAAS,CAACL,KAAM,EAAnC,GAAuC,mBAD7C,CAFT;AAME,IAAA,YAAY,EAAGO,IAAD,IAAWA,IAAI,GAAGA,IAAI,CAACP,KAAR,GAAgB,EAN/C;AAAA,cAQG,CAAC;AACAQ,MAAAA,aADA;AAEAC,MAAAA,YAFA;AAGAC,MAAAA,aAHA;AAIAC,MAAAA,YAJA;AAKAC,MAAAA,MALA;AAMAC,MAAAA,UANA;AAOAC,MAAAA,gBAPA;AAQAC,MAAAA,YARA;AASAC,MAAAA;AATA,KAAD,kBAWC;AAAA,8BACE,sBAAWN,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,KAAK,EAAE;AAAEO,UAAAA,OAAO,EAAE;AAAX,SADT;AAAA,WAEMD,YAAY,CAAC,EAAD,EAAK;AAAEE,UAAAA,gBAAgB,EAAE;AAApB,SAAL,CAFlB;AAAA,+BAIE,sBAAWV,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,mBAAQG,YAAY,EAApB;AAAA,kBACGC,MAAM,GACHR,OAAO,CACJe,MADH,CAEKZ,IAAD,IAAU,CAACM,UAAD,IAAeN,IAAI,CAACP,KAAL,CAAWoB,QAAX,CAAoBP,UAApB,CAF7B,EAIGQ,GAJH,CAIO,CAACd,IAAD,EAAOe,KAAP,kBACH,mBACMb,YAAY,CAAC;AACfc,YAAAA,GAAG,EAAEhB,IAAI,CAACP,KADK;AAEfsB,YAAAA,KAFe;AAGff,YAAAA,IAHe;AAIfiB,YAAAA,KAAK,EAAE;AACLC,cAAAA,eAAe,EACbX,gBAAgB,KAAKQ,KAArB,GAA6B,MAA7B,GAAsC,OAFnC;AAGLI,cAAAA,UAAU,EAAEX,YAAY,KAAKR,IAAjB,GAAwB,MAAxB,GAAiC;AAHxC;AAJQ,WAAD,CADlB;AAAA,oBAYGA,IAAI,CAACP;AAZR;AAAA;AAAA;AAAA;AAAA,gBALJ,CADG,GAqBH;AAtBN;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAAA;AAAA;AAAA;AAAA,UADF;AAwDD,CA7DM;;GAAMC,I;UAEGH,W;;;KAFHG,I","sourcesContent":["import React from 'react';\nimport Downshift from 'downshift';\nimport { useSelector } from 'react-redux';\n\nconst colors = [\n  { value: 'white' },\n  { value: 'black' },\n  { value: 'red' },\n  { value: 'orange' },\n  { value: 'yellow' },\n  { value: 'green' },\n  { value: 'blue' },\n  { value: 'cyan' },\n  { value: 'purple' },\n  { value: 'pink' },\n];\n\nexport const Test = () => {\n\n  const state = useSelector((state) => state.app);\n  const {weather} = state\n\n  return (\n    <Downshift\n      onChange={(selection) =>\n        alert(\n          selection ? `You selected ${selection.value}` : 'Selection Cleared'\n        )\n      }\n      itemToString={(item) => (item ? item.value : '')}\n    >\n      {({\n        getInputProps,\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        inputValue,\n        highlightedIndex,\n        selectedItem,\n        getRootProps,\n      }) => (\n        <div>\n          <label {...getLabelProps()}>What is your favourite color? </label>\n          <div\n            style={{ display: 'inline-block' }}\n            {...getRootProps({}, { suppressRefError: true })}\n          >\n            <input {...getInputProps()} />\n          </div>\n          <ul {...getMenuProps()}>\n            {isOpen\n              ? weather\n                  .filter(\n                    (item) => !inputValue || item.value.includes(inputValue)\n                  )\n                  .map((item, index) => (\n                    <li\n                      {...getItemProps({\n                        key: item.value,\n                        index,\n                        item,\n                        style: {\n                          backgroundColor:\n                            highlightedIndex === index ? 'cyan' : 'white',\n                          fontWeight: selectedItem === item ? 'bold' : 'normal',\n                        },\n                      })}\n                    >\n                      {item.value}\n                    </li>\n                  ))\n              : null}\n          </ul>\n        </div>\n      )}\n    </Downshift>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}