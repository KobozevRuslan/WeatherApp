{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/weather/weater-app/src/modules/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport SearchInput from './components/searchInput/SearchInput';\nimport GlobalStyle from '../styledComponents/GlobalStyle';\nimport { MainWrapper } from './styledComponents/App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'd6487c851d4294ca86263fcb2861f71f';\n\nconst App = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState('');\n\n  const getStatistic = () => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=London&appid=${API_KEY}`).then(res => {\n      const countries = res.data.name;\n      setData(countries);\n    }).catch(error => {\n      return error;\n    });\n  };\n\n  useEffect(() => {\n    getStatistic();\n  }, []);\n  const filteredData = data.filter(items => {\n    console.log(items); // return items.Country.toLowerCase().includes(value.toLowerCase());\n  });\n  console.log(filteredData);\n  return /*#__PURE__*/_jsxDEV(MainWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n      setValue: setValue,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"GwUU7pG7uFDuTx4LAM333zlp1/M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/weather/weater-app/src/modules/App.jsx"],"names":["React","useEffect","useState","axios","SearchInput","GlobalStyle","MainWrapper","API_KEY","App","data","setData","value","setValue","getStatistic","get","then","res","countries","name","catch","error","filteredData","filter","items","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,sCAAxB;AAEA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMW,YAAY,GAAG,MAAM;AACzBV,IAAAA,KAAK,CAACW,GAAN,CAAW,kEAAiEP,OAAQ,EAApF,EACGQ,IADH,CACQC,GAAG,IAAI;AACX,YAAMC,SAAS,GAAGD,GAAG,CAACP,IAAJ,CAASS,IAA3B;AACAR,MAAAA,OAAO,CAACO,SAAD,CAAP;AACD,KAJH,EAKGE,KALH,CAKSC,KAAK,IAAI;AACd,aAAOA,KAAP;AACD,KAPH;AAQD,GATD;;AAWAnB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMQ,YAAY,GAAGZ,IAAI,CAACa,MAAL,CAAYC,KAAK,IAAI;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADwC,CAExC;AACD,GAHoB,CAArB;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AAEA,sBACE,QAAC,WAAD;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAET,QAAvB;AAAiC,MAAA,KAAK,EAAED;AAAxC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAhCD;;GAAMH,G;;KAAAA,G;AAkCN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport SearchInput from './components/searchInput/SearchInput';\n\nimport GlobalStyle from '../styledComponents/GlobalStyle';\nimport { MainWrapper } from './styledComponents/App';\n\nconst API_KEY = 'd6487c851d4294ca86263fcb2861f71f';\n\nconst App = () => {\n  const [data, setData] = useState([])\n  const [value, setValue] = useState('');\n\n  const getStatistic = () => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=London&appid=${API_KEY}`)\n      .then(res => {\n        const countries = res.data.name;\n        setData(countries);\n      })\n      .catch(error => {\n        return error;\n      });\n  }\n\n  useEffect(() => {\n    getStatistic()\n  }, [])\n\n  const filteredData = data.filter(items => {\n    console.log(items);\n    // return items.Country.toLowerCase().includes(value.toLowerCase());\n  });\n\n  console.log(filteredData);\n\n  return (\n    <MainWrapper>\n      <SearchInput setValue={setValue} value={value} />\n      <GlobalStyle />\n    </MainWrapper>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}