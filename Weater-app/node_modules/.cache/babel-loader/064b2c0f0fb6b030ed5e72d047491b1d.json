{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/weather/weater-app/src/modules/components/thisDay/ThisDay.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchWeatherAction } from '../../../redux/slices/weatherSlices';\nimport { MainWrapper, Wrapper } from './styledComponents/ThisDayWeather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherItems = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchWeatherAction('Kyiv'));\n  }, [dispatch]); // select state from store\n\n  const state = useSelector(state => state);\n  const {\n    weather,\n    isLoading,\n    error\n  } = state;\n  return /*#__PURE__*/_jsxDEV(MainWrapper, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading please wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : error ?\n    /*#__PURE__*/\n    // <h1>{error?.message}</h1>\n    _jsxDEV(\"h1\", {\n      children: error && error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [Math.floor(weather === null || weather === void 0 ? void 0 : weather.main.temp), /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://openweathermap.org/img/wn/${weather === null || weather === void 0 ? void 0 : weather.weather[0].icon}@2x.png`,\n          alt: weather === null || weather === void 0 ? void 0 : weather.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: weather === null || weather === void 0 ? void 0 : weather.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: weather === null || weather === void 0 ? void 0 : weather.sys.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: weather === null || weather === void 0 ? void 0 : weather.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherItems, \"AfGwZBpDcyZ4hjuRBqb3pHilgDc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = WeatherItems;\nexport default WeatherItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherItems\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/weather/weater-app/src/modules/components/thisDay/ThisDay.jsx"],"names":["React","useEffect","useDispatch","useSelector","fetchWeatherAction","MainWrapper","Wrapper","WeatherItems","dispatch","state","weather","isLoading","error","message","display","alignItems","Math","floor","main","temp","icon","description","name","sys","country"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,qCAAnC;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,mCAArC;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACJ,kBAAkB,CAAC,MAAD,CAAnB,CAAR;AACD,GAFQ,EAEN,CAACI,QAAD,CAFM,CAAT,CAHyB,CAOzB;;AACA,QAAMC,KAAK,GAAGN,WAAW,CAAEM,KAAD,IAAWA,KAAZ,CAAzB;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,MAAgCH,KAAtC;AACA,sBACE,QAAC,WAAD;AAAA,cACGE,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,GAENC,KAAK;AAAA;AACP;AACA;AAAA,gBAAKA,KAAK,IAAIA,KAAK,CAACC;AAApB;AAAA;AAAA;AAAA;AAAA,YAFO,gBAIP,QAAC,OAAD;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE,MAAV;AAAkBC,UAAAA,UAAU,EAAE;AAA9B,SAAZ;AAAA,gCACE;AAAA,qBACGC,IAAI,CAACC,KAAL,CAAWP,OAAX,aAAWA,OAAX,uBAAWA,OAAO,CAAEQ,IAAT,CAAcC,IAAzB,CADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AACE,UAAA,GAAG,EAAG,qCAAoCT,OAArC,aAAqCA,OAArC,uBAAqCA,OAAO,CAAEA,OAAT,CAAiB,CAAjB,EAAoBU,IAAK,SADrE;AAEE,UAAA,GAAG,EAAEV,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEA,OAAT,CAAiB,CAAjB,EAAoBW;AAF3B;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,gCACE;AAAA,oBAAOX,OAAP,aAAOA,OAAP,uBAAOA,OAAO,CAAEY;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAMZ,OAAN,aAAMA,OAAN,uBAAMA,OAAO,CAAEa,GAAT,CAAaC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAeE;AAAA,+BACE;AAAA,oBAAId,OAAJ,aAAIA,OAAJ,uBAAIA,OAAO,CAAEA,OAAT,CAAiB,CAAjB,EAAoBW;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAxCD;;GAAMd,Y;UACaL,W,EAOHC,W;;;KARVI,Y;AA0CN,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchWeatherAction } from '../../../redux/slices/weatherSlices';\nimport { MainWrapper, Wrapper } from './styledComponents/ThisDayWeather';\n\nconst WeatherItems = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchWeatherAction('Kyiv'));\n  }, [dispatch]);\n\n  // select state from store\n  const state = useSelector((state) => state);\n  const { weather, isLoading, error } = state;\n  return (\n    <MainWrapper>\n      {isLoading ? (\n        <h1>Loading please wait...</h1>\n      ) : error ? (\n        // <h1>{error?.message}</h1>\n        <h1>{error && error.message}</h1>\n      ) : (\n        <Wrapper>\n          <div style={{display: 'flex', alignItems: 'center'}}>\n            <h1>\n              {Math.floor(weather?.main.temp)}\n              <sup>&deg;</sup>\n            </h1>\n            <img\n              src={`https://openweathermap.org/img/wn/${weather?.weather[0].icon}@2x.png`}\n              alt={weather?.weather[0].description}\n            />\n          </div>\n          <h2>\n            <span>{weather?.name}</span>\n            <sup>{weather?.sys.country}</sup>\n          </h2>\n          <div>\n            <p>{weather?.weather[0].description}</p>\n          </div>\n        </Wrapper>\n      )}\n    </MainWrapper>\n  );\n};\n\nexport default WeatherItems;\n"]},"metadata":{},"sourceType":"module"}