{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/weather/weater-app/src/modules/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport SearchInput from './components/searchInput/SearchInput';\nimport WeatherItems from './components/weatherList/WeatherItems'; // import { fetchWeather } from '../service/ApiService';\n\nimport { MainWrapper } from './styledComponents/App';\nimport GlobalStyle from '../styledComponents/GlobalStyle';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getRepos } from '../store/action/repos';\nimport Repo from './components/weatherList/repo/Repo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({}); // const search = async (e) => {\n  //   if (e.key === 'Enter') {\n  //     const data = await fetchWeather(query);\n  //     setWeather(data);\n  //     setQuery('');\n  //   }\n  // };\n\n  const dispatch = useDispatch();\n  const repos = useSelector(state => state.repos.items);\n  useEffect(() => {\n    dispatch(getRepos());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MainWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: repos.map(repo => /*#__PURE__*/_jsxDEV(Repo, {\n        repo: repo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"NimfKSzzkpUo7DvkitJ+IoHJQss=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/weather/weater-app/src/modules/App.jsx"],"names":["React","useEffect","useState","SearchInput","WeatherItems","MainWrapper","GlobalStyle","useDispatch","useSelector","getRepos","Repo","App","query","setQuery","weather","setWeather","dispatch","repos","state","items","map","repo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,YAAP,MAAyB,uCAAzB,C,CAEA;;AAEA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,IAAP,MAAiB,oCAAjB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC,CAFgB,CAIhB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMc,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,KAAK,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYE,KAAtB,CAAzB;AAEAlB,EAAAA,SAAS,CAAC,MAAI;AACVe,IAAAA,QAAQ,CAACP,QAAQ,EAAT,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,WAAD;AAAA,4BAGE;AAAA,gBACOQ,KAAK,CAACG,GAAN,CAAUC,IAAI,iBACX,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,cADH;AADP;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA/BD;;GAAMV,G;UAYaJ,W,EACHC,W;;;KAbVG,G;AAiCN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport SearchInput from './components/searchInput/SearchInput';\nimport WeatherItems from './components/weatherList/WeatherItems';\n\n// import { fetchWeather } from '../service/ApiService';\n\nimport { MainWrapper } from './styledComponents/App';\nimport GlobalStyle from '../styledComponents/GlobalStyle';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getRepos } from '../store/action/repos';\nimport Repo from './components/weatherList/repo/Repo';\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  // const search = async (e) => {\n  //   if (e.key === 'Enter') {\n  //     const data = await fetchWeather(query);\n  //     setWeather(data);\n  //     setQuery('');\n  //   }\n  // };\n\n  const dispatch = useDispatch()\n  const repos = useSelector(state => state.repos.items)\n\n  useEffect(()=>{\n      dispatch(getRepos())\n  }, [])\n\n  return (\n    <MainWrapper>\n      {/* <SearchInput query={query} setQuery={setQuery} search={search} /> */}\n      {/* <WeatherItems weather={weather} /> */}\n      <div>\n            {repos.map(repo =>\n                <Repo repo={repo}/>\n            )}\n        </div>\n      <GlobalStyle />\n    </MainWrapper>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}