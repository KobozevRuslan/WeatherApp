{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/weather/Weater-app/src/modules/components/loading/Error.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Error = () => {\n  _s();\n\n  const state = useSelector(state => state);\n  const {\n    isLoading,\n    error\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 28\n    }, this) : error( /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: error === null || error === void 0 ? void 0 : error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 50\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Error, \"dFAAPDNEsxQMpRpiSMZXJjfPktw=\", false, function () {\n  return [useSelector];\n});\n\n_c = Error;\nexport default Error;\n\nvar _c;\n\n$RefreshReg$(_c, \"Error\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/weather/Weater-app/src/modules/components/loading/Error.jsx"],"names":["React","useSelector","Error","state","isLoading","error","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,KAAK,GAAGF,WAAW,CAAEE,KAAD,IAAWA,KAAZ,CAAzB;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAuBF,KAA7B;AACA,sBAAO;AAAA,cAAMC,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAAmBC,KAAK,eAAC;AAAA,gBAAKA,KAAL,aAAKA,KAAL,uBAAKA,KAAK,CAAEC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAAD;AAAvC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAJD;;GAAMJ,K;UACUD,W;;;KADVC,K;AAMN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst Error = () => {\n  const state = useSelector((state) => state);\n  const { isLoading, error } = state;\n  return <div>{isLoading ? <h2>test</h2> : error(<h3>{error?.message}</h3>)}</div>;\n};\n\nexport default Error;\n"]},"metadata":{},"sourceType":"module"}