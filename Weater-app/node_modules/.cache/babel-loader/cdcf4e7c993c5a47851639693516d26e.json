{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/WeatherApp/WeatherApp/Weater-app/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchData } from '../store/thunk/action/app';\nimport Header from './header/Header';\nimport Main from './main/Main';\nimport { MainAppWrapper } from './styledComponents/App';\nimport GlobalStyle from '../styledComponents/GlobalStyle';\nimport theme from \"styled-theming\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const backgroundColor = theme(\"theme\", {\n  light: \"#fff\",\n  dark: \"#2d2d2d\"\n});\nexport const textColor = theme(\"theme\", {\n  light: \"#000\",\n  dark: \"#fff\"\n});\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  font-family: sans-serif;\n  background-color: ${backgroundColor};\n  color: ${textColor};\n`;\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchData('London'));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(MainAppWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/WeatherApp/WeatherApp/Weater-app/src/components/App.jsx"],"names":["React","useEffect","useDispatch","fetchData","Header","Main","MainAppWrapper","GlobalStyle","theme","backgroundColor","light","dark","textColor","Container","styled","div","App","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,SAAT,QAA0B,2BAA1B;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,OAAO,MAAMC,eAAe,GAAGD,KAAK,CAAC,OAAD,EAAU;AAC5CE,EAAAA,KAAK,EAAE,MADqC;AAE5CC,EAAAA,IAAI,EAAE;AAFsC,CAAV,CAA7B;AAKP,OAAO,MAAMC,SAAS,GAAGJ,KAAK,CAAC,OAAD,EAAU;AACtCE,EAAAA,KAAK,EAAE,MAD+B;AAEtCC,EAAAA,IAAI,EAAE;AAFgC,CAAV,CAAvB;AAKP,MAAME,SAAS,GAAGC,MAAM,CAACC,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsBN,eAAgB;AACtC,WAAWG,SAAU;AACrB,CAVA;;AAYA,MAAMI,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ,CAACd,SAAS,CAAC,QAAD,CAAV,CAAR;AACD,GAFQ,EAEN,CAACc,QAAD,CAFM,CAAT;AAIA,sBACE,QAAC,cAAD;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAdD;;GAAMD,G;UACad,W;;;KADbc,G;AAgBN,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchData } from '../store/thunk/action/app';\n\nimport Header from './header/Header';\nimport Main from './main/Main';\n\nimport { MainAppWrapper } from './styledComponents/App';\nimport GlobalStyle from '../styledComponents/GlobalStyle';\n\nimport theme from \"styled-theming\";\n\nexport const backgroundColor = theme(\"theme\", {\n  light: \"#fff\",\n  dark: \"#2d2d2d\",\n});\n\nexport const textColor = theme(\"theme\", {\n  light: \"#000\",\n  dark: \"#fff\",\n});\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  font-family: sans-serif;\n  background-color: ${backgroundColor};\n  color: ${textColor};\n`;\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchData('London'));\n  }, [dispatch]);\n\n  return (\n    <MainAppWrapper>\n      <Header />\n      <Main />\n      <GlobalStyle />\n    </MainAppWrapper>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}