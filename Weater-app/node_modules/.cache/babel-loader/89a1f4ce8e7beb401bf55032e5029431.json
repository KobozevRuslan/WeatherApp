{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { languegeObject } from \"../../data/languageObject\";\nexport const languageSliceAction = createAsyncThunk();\nconst languageSlice = createSlice({\n  name: 'language',\n  initialState: {\n    obj: languegeObject\n  },\n  extraReducers: builder => {\n    //fulfilled\n    builder.addCase((state, action) => {\n      state.language = action === null || action === void 0 ? void 0 : action.payload;\n    }); //rejected\n\n    builder.addCase((state, action) => {\n      state.language = undefined;\n    });\n  }\n});\nexport default languageSlice.reducer;\nconst todosReducer = createReducer([], builder => {\n  builder.addCase('ADD_TODO', (state, action) => {\n    // \"мутируем\" массив, вызывая push()\n    state.push(action.payload);\n  }).addCase('TOGGLE_TODO', (state, action) => {\n    const todo = state[action.payload.index]; // \"мутируем\" объект, перезаписывая его поле `completed`\n\n    todo.completed = !todo.completed;\n  }).addCase('REMOVE_TODO', (state, action) => {\n    // мы по-прежнему можем использовать иммутабельную логику обновления состояния\n    return state.filter((todo, i) => i !== action.payload.index);\n  });\n});","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/WeatherApp/Weater-app/src/store/reduxToolkits/slices/languageSlices.js"],"names":["createAsyncThunk","createSlice","languegeObject","languageSliceAction","languageSlice","name","initialState","obj","extraReducers","builder","addCase","state","action","language","payload","undefined","reducer","todosReducer","createReducer","push","todo","index","completed","filter","i"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,OAAO,MAAMC,mBAAmB,GAAGH,gBAAgB,EAA5C;AAEP,MAAMI,aAAa,GAAGH,WAAW,CAAC;AAChCI,EAAAA,IAAI,EAAE,UAD0B;AAEhCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,GAAG,EAAEL;AADO,GAFkB;AAKhCM,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1B;AACAA,IAAAA,OAAO,CAACC,OAAR,CAAiB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClCD,MAAAA,KAAK,CAACE,QAAN,GAAiBD,MAAjB,aAAiBA,MAAjB,uBAAiBA,MAAM,CAAEE,OAAzB;AACD,KAFD,EAF0B,CAK1B;;AACAL,IAAAA,OAAO,CAACC,OAAR,CAAgB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCD,MAAAA,KAAK,CAACE,QAAN,GAAiBE,SAAjB;AACD,KAFD;AAGD;AAd+B,CAAD,CAAjC;AAiBA,eAAeX,aAAa,CAACY,OAA7B;AAEA,MAAMC,YAAY,GAAGC,aAAa,CAAC,EAAD,EAAMT,OAAD,IAAa;AAClDA,EAAAA,OAAO,CACJC,OADH,CACW,UADX,EACuB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC;AACAD,IAAAA,KAAK,CAACQ,IAAN,CAAWP,MAAM,CAACE,OAAlB;AACD,GAJH,EAKGJ,OALH,CAKW,aALX,EAK0B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzC,UAAMQ,IAAI,GAAGT,KAAK,CAACC,MAAM,CAACE,OAAP,CAAeO,KAAhB,CAAlB,CADyC,CAEzC;;AACAD,IAAAA,IAAI,CAACE,SAAL,GAAiB,CAACF,IAAI,CAACE,SAAvB;AACD,GATH,EAUGZ,OAVH,CAUW,aAVX,EAU0B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzC;AACA,WAAOD,KAAK,CAACY,MAAN,CACL,CAACH,IAAD,EAAOI,CAAP,KAAaA,CAAC,KAAKZ,MAAM,CAACE,OAAP,CAAeO,KAD7B,CAAP;AAGD,GAfH;AAgBD,CAjBiC,CAAlC","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { languegeObject } from \"../../data/languageObject\";\n\nexport const languageSliceAction = createAsyncThunk()\n\nconst languageSlice = createSlice({\n  name: 'language',\n  initialState: {\n    obj: languegeObject\n  },\n  extraReducers: (builder) => {\n    //fulfilled\n    builder.addCase( (state, action) => {\n      state.language = action?.payload;\n    });\n    //rejected\n    builder.addCase((state, action) => {\n      state.language = undefined;\n    });\n  },\n});\n\nexport default languageSlice.reducer;\n\nconst todosReducer = createReducer([], (builder) => {\n  builder\n    .addCase('ADD_TODO', (state, action) => {\n      // \"мутируем\" массив, вызывая push()\n      state.push(action.payload);\n    })\n    .addCase('TOGGLE_TODO', (state, action) => {\n      const todo = state[action.payload.index];\n      // \"мутируем\" объект, перезаписывая его поле `completed`\n      todo.completed = !todo.completed;\n    })\n    .addCase('REMOVE_TODO', (state, action) => {\n      // мы по-прежнему можем использовать иммутабельную логику обновления состояния\n      return state.filter(\n        (todo, i) => i !== action.payload.index\n      );\n    });\n});\n"]},"metadata":{},"sourceType":"module"}