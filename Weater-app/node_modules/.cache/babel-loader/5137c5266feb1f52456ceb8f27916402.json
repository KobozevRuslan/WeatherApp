{"ast":null,"code":"var _jsxFileName = \"/home/cmdb-123844/Desktop/weather/weater-app/src/modules/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SearchInput from './components/searchInput/SearchInput';\nimport WeatherItems from './components/weatherList/WeatherItems';\nimport { fetchWeather } from '../service/ApiService';\nimport { MainWrapper } from './styledComponents/App';\nimport GlobalStyle from '../styledComponents/GlobalStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const repos = useSelector(state => state.repos.data);\n  console.log(repos);\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = async e => {\n    if (e.key === 'Enter') {\n      const data = await fetchWeather(query);\n      setWeather(data);\n      setQuery('');\n    }\n  };\n\n  useEffect(() => {\n    dispatch(fetchWeather);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MainWrapper, {\n    children: [\"Test\", /*#__PURE__*/_jsxDEV(SearchInput, {\n      query: query,\n      setQuery: setQuery,\n      search: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherItems, {\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"MoZ3GaQFc+Z9KqnpJy25uQ+cjRU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/cmdb-123844/Desktop/weather/weater-app/src/modules/App.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","SearchInput","WeatherItems","fetchWeather","MainWrapper","GlobalStyle","App","dispatch","repos","state","data","console","log","query","setQuery","weather","setWeather","search","e","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,SAASC,YAAT,QAA6B,uBAA7B;AAEA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,KAAK,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYE,IAAtB,CAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMmB,MAAM,GAAG,MAAOC,CAAP,IAAa;AAC1B,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrB,YAAMT,IAAI,GAAG,MAAMP,YAAY,CAACU,KAAD,CAA/B;AACAG,MAAAA,UAAU,CAACN,IAAD,CAAV;AACAI,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GAND;;AAQAjB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACJ,YAAD,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,WAAD;AAAA,oCAEE,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEU,KAApB;AAA2B,MAAA,QAAQ,EAAEC,QAArC;AAA+C,MAAA,MAAM,EAAEG;AAAvD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEF;AAAvB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA5BD;;GAAMT,G;UACaP,W,EACHC,W;;;KAFVM,G;AA8BN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport SearchInput from './components/searchInput/SearchInput';\nimport WeatherItems from './components/weatherList/WeatherItems';\n\nimport { fetchWeather } from '../service/ApiService';\n\nimport { MainWrapper } from './styledComponents/App';\nimport GlobalStyle from '../styledComponents/GlobalStyle';\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const repos = useSelector(state => state.repos.data)\n  console.log(repos);\n  \n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = async (e) => {\n    if (e.key === 'Enter') {\n      const data = await fetchWeather(query);\n      setWeather(data);\n      setQuery('');\n    }\n  };\n\n  useEffect(() => {\n    dispatch(fetchWeather)\n  }, [])\n\n  return (\n    <MainWrapper>\n      Test\n      <SearchInput query={query} setQuery={setQuery} search={search} />\n      <WeatherItems weather={weather} />\n      <GlobalStyle />\n    </MainWrapper>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}